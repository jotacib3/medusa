{
	"id": 585,
	"name": "cart",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1598,
			"name": "AdjustmentLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The adjustment line details."
					}
				]
			},
			"children": [
				{
					"id": 1599,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the adjustment line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1600,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to\nthis adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1601,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1602,
					"name": "raw_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1603,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1604,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the adjustment line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1605,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated promotion."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1606,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1607,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the adjustment line was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1608,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the adjustment line was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1599,
						1600,
						1601,
						1602,
						1603,
						1604,
						1605,
						1606,
						1607,
						1608
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1314,
					"name": "LineItemAdjustmentDTO"
				},
				{
					"type": "reference",
					"target": 1350,
					"name": "ShippingMethodAdjustmentDTO"
				}
			]
		},
		{
			"id": 1350,
			"name": "ShippingMethodAdjustmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method adjustment details."
					}
				]
			},
			"children": [
				{
					"id": 1353,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the adjustment line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1599,
						"name": "AdjustmentLineDTO.id"
					}
				},
				{
					"id": 1354,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to\nthis adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1600,
						"name": "AdjustmentLineDTO.code"
					}
				},
				{
					"id": 1355,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1601,
						"name": "AdjustmentLineDTO.amount"
					}
				},
				{
					"id": 1356,
					"name": "raw_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1602,
						"name": "AdjustmentLineDTO.raw_amount"
					}
				},
				{
					"id": 1357,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1603,
						"name": "AdjustmentLineDTO.cart_id"
					}
				},
				{
					"id": 1358,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the adjustment line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1604,
						"name": "AdjustmentLineDTO.description"
					}
				},
				{
					"id": 1359,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated promotion."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1605,
						"name": "AdjustmentLineDTO.promotion_id"
					}
				},
				{
					"id": 1360,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1606,
						"name": "AdjustmentLineDTO.provider_id"
					}
				},
				{
					"id": 1361,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the adjustment line was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1607,
						"name": "AdjustmentLineDTO.created_at"
					}
				},
				{
					"id": 1362,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the adjustment line was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1608,
						"name": "AdjustmentLineDTO.updated_at"
					}
				},
				{
					"id": 1351,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1261,
						"name": "CartShippingMethodDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1352,
					"name": "shipping_method_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1353,
						1354,
						1355,
						1356,
						1357,
						1358,
						1359,
						1360,
						1361,
						1362,
						1351,
						1352
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1598,
					"name": "AdjustmentLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1314,
			"name": "LineItemAdjustmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The line item adjustment details."
					}
				]
			},
			"children": [
				{
					"id": 1317,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the adjustment line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1599,
						"name": "AdjustmentLineDTO.id"
					}
				},
				{
					"id": 1318,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to\nthis adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1600,
						"name": "AdjustmentLineDTO.code"
					}
				},
				{
					"id": 1319,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1601,
						"name": "AdjustmentLineDTO.amount"
					}
				},
				{
					"id": 1320,
					"name": "raw_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1602,
						"name": "AdjustmentLineDTO.raw_amount"
					}
				},
				{
					"id": 1321,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1603,
						"name": "AdjustmentLineDTO.cart_id"
					}
				},
				{
					"id": 1322,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the adjustment line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1604,
						"name": "AdjustmentLineDTO.description"
					}
				},
				{
					"id": 1323,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated promotion."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1605,
						"name": "AdjustmentLineDTO.promotion_id"
					}
				},
				{
					"id": 1324,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1606,
						"name": "AdjustmentLineDTO.provider_id"
					}
				},
				{
					"id": 1325,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the adjustment line was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1607,
						"name": "AdjustmentLineDTO.created_at"
					}
				},
				{
					"id": 1326,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the adjustment line was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1608,
						"name": "AdjustmentLineDTO.updated_at"
					}
				},
				{
					"id": 1315,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1111,
						"name": "CartLineItemDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1316,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1317,
						1318,
						1319,
						1320,
						1321,
						1322,
						1323,
						1324,
						1325,
						1326,
						1315,
						1316
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1598,
					"name": "AdjustmentLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1609,
			"name": "TaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax line details."
					}
				]
			},
			"children": [
				{
					"id": 1610,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1611,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1612,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1613,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1614,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1615,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1616,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the tax line was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1617,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the tax line was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1610,
						1611,
						1612,
						1613,
						1614,
						1615,
						1616,
						1617
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1387,
					"name": "LineItemTaxLineDTO"
				},
				{
					"type": "reference",
					"target": 1427,
					"name": "ShippingMethodTaxLineDTO"
				}
			]
		},
		{
			"id": 1427,
			"name": "ShippingMethodTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method tax line details."
					}
				]
			},
			"children": [
				{
					"id": 1434,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1610,
						"name": "TaxLineDTO.id"
					}
				},
				{
					"id": 1435,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1611,
						"name": "TaxLineDTO.description"
					}
				},
				{
					"id": 1436,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1612,
						"name": "TaxLineDTO.tax_rate_id"
					}
				},
				{
					"id": 1437,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1613,
						"name": "TaxLineDTO.code"
					}
				},
				{
					"id": 1438,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1614,
						"name": "TaxLineDTO.rate"
					}
				},
				{
					"id": 1439,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1615,
						"name": "TaxLineDTO.provider_id"
					}
				},
				{
					"id": 1440,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the tax line was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1616,
						"name": "TaxLineDTO.created_at"
					}
				},
				{
					"id": 1441,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the tax line was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1617,
						"name": "TaxLineDTO.updated_at"
					}
				},
				{
					"id": 1428,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1261,
						"name": "CartShippingMethodDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1429,
					"name": "shipping_method_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1430,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total tax relative to the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1431,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal tax relative to the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1432,
					"name": "raw_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw total tax relative to the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1433,
					"name": "raw_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw subtotal tax relative to the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1434,
						1435,
						1436,
						1437,
						1438,
						1439,
						1440,
						1441,
						1428,
						1429,
						1430,
						1431,
						1432,
						1433
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1609,
					"name": "TaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1387,
			"name": "LineItemTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The line item tax line details."
					}
				]
			},
			"children": [
				{
					"id": 1394,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1610,
						"name": "TaxLineDTO.id"
					}
				},
				{
					"id": 1395,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1611,
						"name": "TaxLineDTO.description"
					}
				},
				{
					"id": 1396,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1612,
						"name": "TaxLineDTO.tax_rate_id"
					}
				},
				{
					"id": 1397,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1613,
						"name": "TaxLineDTO.code"
					}
				},
				{
					"id": 1398,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1614,
						"name": "TaxLineDTO.rate"
					}
				},
				{
					"id": 1399,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1615,
						"name": "TaxLineDTO.provider_id"
					}
				},
				{
					"id": 1400,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the tax line was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1616,
						"name": "TaxLineDTO.created_at"
					}
				},
				{
					"id": 1401,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the tax line was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1617,
						"name": "TaxLineDTO.updated_at"
					}
				},
				{
					"id": 1388,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1111,
						"name": "CartLineItemDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1389,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1390,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total tax relative to the item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1391,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal tax relative to the item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1392,
					"name": "raw_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw total tax relative to the item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1393,
					"name": "raw_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw subtotal tax relative to the item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1394,
						1395,
						1396,
						1397,
						1398,
						1399,
						1400,
						1401,
						1388,
						1389,
						1390,
						1391,
						1392,
						1393
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1609,
					"name": "TaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1068,
			"name": "CartAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart address details."
					}
				]
			},
			"children": [
				{
					"id": 1069,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1070,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer ID of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1071,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1072,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1073,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone number of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1074,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1075,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first address line of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1076,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second address line of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1077,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1078,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country code of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1079,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province/state of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1080,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1081,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1082,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the address was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1083,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the address was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1069,
						1070,
						1071,
						1072,
						1073,
						1074,
						1075,
						1076,
						1077,
						1078,
						1079,
						1080,
						1081,
						1082,
						1083
					]
				}
			]
		},
		{
			"id": 1261,
			"name": "CartShippingMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 1262,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1263,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1264,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1265,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1266,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1267,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the shipping method price is tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1268,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option the method was created from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1269,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional data needed for fulfillment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1270,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1271,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax lines."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1427,
							"name": "ShippingMethodTaxLineDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1272,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated adjustments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1350,
							"name": "ShippingMethodAdjustmentDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1273,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the shipping method was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1274,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the shipping method was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1275,
					"name": "original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1276,
					"name": "original_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original subtotal of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1277,
					"name": "original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original tax total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1278,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1279,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1280,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1281,
					"name": "discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1282,
					"name": "discount_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount tax total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1283,
					"name": "raw_original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1284,
					"name": "raw_original_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original subtotal of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1285,
					"name": "raw_original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original tax total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1286,
					"name": "raw_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1287,
					"name": "raw_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw subtotal of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1288,
					"name": "raw_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw tax total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1289,
					"name": "raw_discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw discount total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1290,
					"name": "raw_discount_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw discount tax total of the cart shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1262,
						1263,
						1264,
						1265,
						1266,
						1267,
						1268,
						1269,
						1270,
						1271,
						1272,
						1273,
						1274,
						1275,
						1276,
						1277,
						1278,
						1279,
						1280,
						1281,
						1282,
						1283,
						1284,
						1285,
						1286,
						1287,
						1288,
						1289,
						1290
					]
				}
			]
		},
		{
			"id": 1546,
			"name": "CartLineItemTotalsDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart line item totals details."
					}
				]
			},
			"children": [
				{
					"id": 1547,
					"name": "original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1548,
					"name": "original_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1549,
					"name": "original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1550,
					"name": "item_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1551,
					"name": "item_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1552,
					"name": "item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1553,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1554,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1555,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1556,
					"name": "discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1557,
					"name": "discount_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1558,
					"name": "raw_original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1559,
					"name": "raw_original_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1560,
					"name": "raw_original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1561,
					"name": "raw_item_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1562,
					"name": "raw_item_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1563,
					"name": "raw_item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1564,
					"name": "raw_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1565,
					"name": "raw_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1566,
					"name": "raw_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1567,
					"name": "raw_discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw discount total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1568,
					"name": "raw_discount_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw discount tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1547,
						1548,
						1549,
						1550,
						1551,
						1552,
						1553,
						1554,
						1555,
						1556,
						1557,
						1558,
						1559,
						1560,
						1561,
						1562,
						1563,
						1564,
						1565,
						1566,
						1567,
						1568
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1111,
					"name": "CartLineItemDTO"
				}
			]
		},
		{
			"id": 1111,
			"name": "CartLineItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart line item details."
					}
				]
			},
			"children": [
				{
					"id": 1142,
					"name": "original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1547,
						"name": "CartLineItemTotalsDTO.original_total"
					}
				},
				{
					"id": 1143,
					"name": "original_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1548,
						"name": "CartLineItemTotalsDTO.original_subtotal"
					}
				},
				{
					"id": 1144,
					"name": "original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1549,
						"name": "CartLineItemTotalsDTO.original_tax_total"
					}
				},
				{
					"id": 1145,
					"name": "item_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1550,
						"name": "CartLineItemTotalsDTO.item_total"
					}
				},
				{
					"id": 1146,
					"name": "item_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1551,
						"name": "CartLineItemTotalsDTO.item_subtotal"
					}
				},
				{
					"id": 1147,
					"name": "item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1552,
						"name": "CartLineItemTotalsDTO.item_tax_total"
					}
				},
				{
					"id": 1148,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1553,
						"name": "CartLineItemTotalsDTO.total"
					}
				},
				{
					"id": 1149,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1554,
						"name": "CartLineItemTotalsDTO.subtotal"
					}
				},
				{
					"id": 1150,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1555,
						"name": "CartLineItemTotalsDTO.tax_total"
					}
				},
				{
					"id": 1151,
					"name": "discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1556,
						"name": "CartLineItemTotalsDTO.discount_total"
					}
				},
				{
					"id": 1152,
					"name": "discount_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1557,
						"name": "CartLineItemTotalsDTO.discount_tax_total"
					}
				},
				{
					"id": 1153,
					"name": "raw_original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1558,
						"name": "CartLineItemTotalsDTO.raw_original_total"
					}
				},
				{
					"id": 1154,
					"name": "raw_original_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1559,
						"name": "CartLineItemTotalsDTO.raw_original_subtotal"
					}
				},
				{
					"id": 1155,
					"name": "raw_original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1560,
						"name": "CartLineItemTotalsDTO.raw_original_tax_total"
					}
				},
				{
					"id": 1156,
					"name": "raw_item_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1561,
						"name": "CartLineItemTotalsDTO.raw_item_total"
					}
				},
				{
					"id": 1157,
					"name": "raw_item_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1562,
						"name": "CartLineItemTotalsDTO.raw_item_subtotal"
					}
				},
				{
					"id": 1158,
					"name": "raw_item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1563,
						"name": "CartLineItemTotalsDTO.raw_item_tax_total"
					}
				},
				{
					"id": 1159,
					"name": "raw_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1564,
						"name": "CartLineItemTotalsDTO.raw_total"
					}
				},
				{
					"id": 1160,
					"name": "raw_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw subtotal of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1565,
						"name": "CartLineItemTotalsDTO.raw_subtotal"
					}
				},
				{
					"id": 1161,
					"name": "raw_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1566,
						"name": "CartLineItemTotalsDTO.raw_tax_total"
					}
				},
				{
					"id": 1162,
					"name": "raw_discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw discount total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1567,
						"name": "CartLineItemTotalsDTO.raw_discount_total"
					}
				},
				{
					"id": 1163,
					"name": "raw_discount_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw discount tax total of the cart line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1568,
						"name": "CartLineItemTotalsDTO.raw_discount_tax_total"
					}
				},
				{
					"id": 1112,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1113,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1114,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1115,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line item's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1116,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line item's quantity in the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1117,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1118,
					"name": "product_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1119,
					"name": "product_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1120,
					"name": "product_subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1121,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1122,
					"name": "product_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The collection of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1123,
					"name": "product_handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1124,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated variant's ID of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1125,
					"name": "variant_sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sku of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1126,
					"name": "variant_barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1127,
					"name": "variant_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1128,
					"name": "variant_option_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The option values of the associated variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1129,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1130,
					"name": "is_discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item is discountable."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1131,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item price is tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1132,
					"name": "compare_at_unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated price of the line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1133,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unit price of the item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1134,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax lines."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1387,
							"name": "LineItemTaxLineDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1135,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated adjustments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1314,
							"name": "LineItemAdjustmentDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1136,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 950,
						"name": "CartDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1137,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1138,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1139,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the line item was created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 1140,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the line item was updated."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 1141,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the line item was deleted."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1142,
						1143,
						1144,
						1145,
						1146,
						1147,
						1148,
						1149,
						1150,
						1151,
						1152,
						1153,
						1154,
						1155,
						1156,
						1157,
						1158,
						1159,
						1160,
						1161,
						1162,
						1163,
						1112,
						1113,
						1114,
						1115,
						1116,
						1117,
						1118,
						1119,
						1120,
						1121,
						1122,
						1123,
						1124,
						1125,
						1126,
						1127,
						1128,
						1129,
						1130,
						1131,
						1132,
						1133,
						1134,
						1135,
						1136,
						1137,
						1138,
						1139,
						1140,
						1141
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1546,
					"name": "CartLineItemTotalsDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 950,
			"name": "CartDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart details."
					}
				]
			},
			"children": [
				{
					"id": 951,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 952,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region the cart belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 953,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated customer"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 954,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel the cart belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 955,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer that owns the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 956,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of the cart"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 957,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping address."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1068,
						"name": "CartAddressDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 958,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated billing address."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 1068,
						"name": "CartAddressDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 959,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line items."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1111,
							"name": "CartLineItemDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 960,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping methods"
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1261,
							"name": "CartShippingMethodDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 961,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 962,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the cart was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 963,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the cart was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 964,
					"name": "original_item_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original item total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 965,
					"name": "original_item_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original item subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 966,
					"name": "original_item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original item tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 967,
					"name": "item_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 968,
					"name": "item_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 969,
					"name": "item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 970,
					"name": "original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 971,
					"name": "original_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 972,
					"name": "original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 973,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 974,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the cart. (Excluding taxes)"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 975,
					"name": "tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 976,
					"name": "discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 977,
					"name": "discount_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 978,
					"name": "gift_card_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The gift card total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 979,
					"name": "gift_card_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The gift card tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 980,
					"name": "shipping_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 981,
					"name": "shipping_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 982,
					"name": "shipping_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 983,
					"name": "original_shipping_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original shipping total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 984,
					"name": "original_shipping_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original shipping subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 985,
					"name": "original_shipping_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original shipping tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1487,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 986,
					"name": "raw_original_item_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original item total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 987,
					"name": "raw_original_item_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original item subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 988,
					"name": "raw_original_item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original item tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 989,
					"name": "raw_item_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 990,
					"name": "raw_item_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 991,
					"name": "raw_item_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw item tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 992,
					"name": "raw_original_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 993,
					"name": "raw_original_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 994,
					"name": "raw_original_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 995,
					"name": "raw_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 996,
					"name": "raw_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw subtotal of the cart. (Excluding taxes)"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 997,
					"name": "raw_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 998,
					"name": "raw_discount_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw discount total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 999,
					"name": "raw_discount_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw discount tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1000,
					"name": "raw_gift_card_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw gift card total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1001,
					"name": "raw_gift_card_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw gift card tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1002,
					"name": "raw_shipping_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw shipping total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1003,
					"name": "raw_shipping_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw shipping subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1004,
					"name": "raw_shipping_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw shipping tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1005,
					"name": "raw_original_shipping_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original shipping total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1006,
					"name": "raw_original_shipping_subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original shipping subtotal of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1007,
					"name": "raw_original_shipping_tax_total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw original shipping tax total of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						951,
						952,
						953,
						954,
						955,
						956,
						957,
						958,
						959,
						960,
						961,
						962,
						963,
						964,
						965,
						966,
						967,
						968,
						969,
						970,
						971,
						972,
						973,
						974,
						975,
						976,
						977,
						978,
						979,
						980,
						981,
						982,
						983,
						984,
						985,
						986,
						987,
						988,
						989,
						990,
						991,
						992,
						993,
						994,
						995,
						996,
						997,
						998,
						999,
						1000,
						1001,
						1002,
						1003,
						1004,
						1005,
						1006,
						1007
					]
				}
			]
		},
		{
			"id": 1020,
			"name": "FilterableCartProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved carts."
					}
				]
			},
			"children": [
				{
					"id": 1021,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the carts by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1022,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the carts by the ID of their associated sales channel."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1511,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1023,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the carts by the ID of their associated customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1511,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1024,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the carts by the ID of their associated region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1511,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1025,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the carts by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1511,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1026,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the carts by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1511,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1027,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1020,
									"name": "FilterableCartProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1020,
											"name": "FilterableCartProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1508,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1028,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1020,
									"name": "FilterableCartProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1020,
											"name": "FilterableCartProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1509,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1021,
						1022,
						1023,
						1024,
						1025,
						1026,
						1027,
						1028
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1507,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1020,
							"name": "FilterableCartProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1064,
			"name": "FilterableAddressProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved addresss."
					}
				]
			},
			"children": [
				{
					"id": 1065,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the addresss by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1066,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1064,
									"name": "FilterableAddressProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1064,
											"name": "FilterableAddressProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1508,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1067,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1064,
									"name": "FilterableAddressProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1064,
											"name": "FilterableAddressProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1509,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1065,
						1066,
						1067
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1507,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1064,
							"name": "FilterableAddressProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1164,
			"name": "FilterableLineItemProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved line items."
					}
				]
			},
			"children": [
				{
					"id": 1165,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the line items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1166,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line items by the ID of their associated cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1167,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line items by their title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1168,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line items by the ID of their associated variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1169,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line items by the ID of their associated product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1170,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1164,
									"name": "FilterableLineItemProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1164,
											"name": "FilterableLineItemProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1508,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1171,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1164,
									"name": "FilterableLineItemProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1164,
											"name": "FilterableLineItemProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1509,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1165,
						1166,
						1167,
						1168,
						1169,
						1170,
						1171
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1507,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1164,
							"name": "FilterableLineItemProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1306,
			"name": "FilterableLineItemAdjustmentProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved line item adjustments."
					}
				]
			},
			"children": [
				{
					"id": 1307,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the line item adjustments by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1308,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the adjustments by the ID of their associated line item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1309,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line item adjustments by the ID of their associated promotion."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1310,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line item adjustments by the ID of their associated provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1311,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the adjustments by their associated line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1164,
						"name": "FilterableLineItemProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1312,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1306,
									"name": "FilterableLineItemAdjustmentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1306,
											"name": "FilterableLineItemAdjustmentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1508,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1313,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1306,
									"name": "FilterableLineItemAdjustmentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1306,
											"name": "FilterableLineItemAdjustmentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1509,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1307,
						1308,
						1309,
						1310,
						1311,
						1312,
						1313
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1507,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1306,
							"name": "FilterableLineItemAdjustmentProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1254,
			"name": "FilterableShippingMethodProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved shipping methods."
					}
				]
			},
			"children": [
				{
					"id": 1255,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the shipping methods by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1256,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping methods by the ID of their associated cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1257,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping methods by their name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1258,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping methods by the ID of their associated shipping option."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 1511,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1259,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1254,
									"name": "FilterableShippingMethodProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1254,
											"name": "FilterableShippingMethodProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1508,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1260,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1254,
									"name": "FilterableShippingMethodProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1254,
											"name": "FilterableShippingMethodProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1509,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1255,
						1256,
						1257,
						1258,
						1259,
						1260
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1507,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1254,
							"name": "FilterableShippingMethodProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1342,
			"name": "FilterableShippingMethodAdjustmentProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved shipping method adjustments."
					}
				]
			},
			"children": [
				{
					"id": 1343,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the shipping method adjustments by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1344,
					"name": "shipping_method_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the adjustments by the ID of their associated shipping method."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1345,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping method adjustments by the ID of their associated promotion."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1346,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping method adjustments by the ID of their associated provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1347,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the adjustments by their associated shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1254,
						"name": "FilterableShippingMethodProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1348,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1342,
									"name": "FilterableShippingMethodAdjustmentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1342,
											"name": "FilterableShippingMethodAdjustmentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1508,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1349,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1342,
									"name": "FilterableShippingMethodAdjustmentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1342,
											"name": "FilterableShippingMethodAdjustmentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1509,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1343,
						1344,
						1345,
						1346,
						1347,
						1348,
						1349
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1507,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1342,
							"name": "FilterableShippingMethodAdjustmentProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1377,
			"name": "FilterableLineItemTaxLineProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved line item tax lines."
					}
				]
			},
			"children": [
				{
					"id": 1378,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the line item tax lines by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1379,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line item tax lines by their description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1380,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line item tax lines by their code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1381,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line item tax lines by the ID of their associated tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1382,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the line item tax lines by the ID of their associated provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1383,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax lines by the ID of their associated line item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1384,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax lines by their associated line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1164,
						"name": "FilterableLineItemProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1385,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1377,
									"name": "FilterableLineItemTaxLineProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1377,
											"name": "FilterableLineItemTaxLineProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1508,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1386,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1377,
									"name": "FilterableLineItemTaxLineProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1377,
											"name": "FilterableLineItemTaxLineProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1509,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1378,
						1379,
						1380,
						1381,
						1382,
						1383,
						1384,
						1385,
						1386
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1507,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1377,
							"name": "FilterableLineItemTaxLineProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1417,
			"name": "FilterableShippingMethodTaxLineProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved shipping method tax lines."
					}
				]
			},
			"children": [
				{
					"id": 1418,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the shipping method tax lines by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1419,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping method tax lines by their description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1420,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping method tax lines by their code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1421,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping method tax lines by the ID of their associated tax rate."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1422,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping method tax lines by the ID of their associated provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1423,
					"name": "shipping_method_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax lines by the ID of their associated shipping method."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1424,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the tax lines by their associated shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1254,
						"name": "FilterableShippingMethodProps",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1425,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1417,
									"name": "FilterableShippingMethodTaxLineProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1417,
											"name": "FilterableShippingMethodTaxLineProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1508,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 1426,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1417,
									"name": "FilterableShippingMethodTaxLineProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1417,
											"name": "FilterableShippingMethodTaxLineProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1509,
						"name": "BaseFilterable.$or"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1418,
						1419,
						1420,
						1421,
						1422,
						1423,
						1424,
						1425,
						1426
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1507,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1417,
							"name": "FilterableShippingMethodTaxLineProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1533,
			"name": "UpsertAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the address to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 1534,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1535,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1536,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1537,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1538,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first line of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1539,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second line of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1540,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1541,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO two country code of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1542,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1543,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1544,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1545,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1534,
						1535,
						1536,
						1537,
						1538,
						1539,
						1540,
						1541,
						1542,
						1543,
						1544,
						1545
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1084,
					"name": "CreateAddressDTO"
				},
				{
					"type": "reference",
					"target": 1097,
					"name": "UpdateAddressDTO"
				}
			]
		},
		{
			"id": 1097,
			"name": "UpdateAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the address."
					}
				]
			},
			"children": [
				{
					"id": 1099,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1534,
						"name": "UpsertAddressDTO.customer_id"
					}
				},
				{
					"id": 1100,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1535,
						"name": "UpsertAddressDTO.company"
					}
				},
				{
					"id": 1101,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1536,
						"name": "UpsertAddressDTO.first_name"
					}
				},
				{
					"id": 1102,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1537,
						"name": "UpsertAddressDTO.last_name"
					}
				},
				{
					"id": 1103,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first line of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1538,
						"name": "UpsertAddressDTO.address_1"
					}
				},
				{
					"id": 1104,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second line of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1539,
						"name": "UpsertAddressDTO.address_2"
					}
				},
				{
					"id": 1105,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1540,
						"name": "UpsertAddressDTO.city"
					}
				},
				{
					"id": 1106,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO two country code of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1541,
						"name": "UpsertAddressDTO.country_code"
					}
				},
				{
					"id": 1107,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1542,
						"name": "UpsertAddressDTO.province"
					}
				},
				{
					"id": 1108,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1543,
						"name": "UpsertAddressDTO.postal_code"
					}
				},
				{
					"id": 1109,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1544,
						"name": "UpsertAddressDTO.phone"
					}
				},
				{
					"id": 1110,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1545,
						"name": "UpsertAddressDTO.metadata"
					}
				},
				{
					"id": 1098,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1099,
						1100,
						1101,
						1102,
						1103,
						1104,
						1105,
						1106,
						1107,
						1108,
						1109,
						1110,
						1098
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1533,
					"name": "UpsertAddressDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1084,
			"name": "CreateAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The address to be created."
					}
				]
			},
			"children": [
				{
					"id": 1085,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1534,
						"name": "UpsertAddressDTO.customer_id"
					}
				},
				{
					"id": 1086,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1535,
						"name": "UpsertAddressDTO.company"
					}
				},
				{
					"id": 1087,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1536,
						"name": "UpsertAddressDTO.first_name"
					}
				},
				{
					"id": 1088,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1537,
						"name": "UpsertAddressDTO.last_name"
					}
				},
				{
					"id": 1089,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first line of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1538,
						"name": "UpsertAddressDTO.address_1"
					}
				},
				{
					"id": 1090,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The second line of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1539,
						"name": "UpsertAddressDTO.address_2"
					}
				},
				{
					"id": 1091,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1540,
						"name": "UpsertAddressDTO.city"
					}
				},
				{
					"id": 1092,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO two country code of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1541,
						"name": "UpsertAddressDTO.country_code"
					}
				},
				{
					"id": 1093,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1542,
						"name": "UpsertAddressDTO.province"
					}
				},
				{
					"id": 1094,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1543,
						"name": "UpsertAddressDTO.postal_code"
					}
				},
				{
					"id": 1095,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1544,
						"name": "UpsertAddressDTO.phone"
					}
				},
				{
					"id": 1096,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1545,
						"name": "UpsertAddressDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1085,
						1086,
						1087,
						1088,
						1089,
						1090,
						1091,
						1092,
						1093,
						1094,
						1095,
						1096
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1533,
					"name": "UpsertAddressDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1029,
			"name": "CreateCartDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart to be created."
					}
				]
			},
			"children": [
				{
					"id": 1030,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1031,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1032,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channel's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1033,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer that owns the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1034,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1035,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping address's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1036,
					"name": "billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated billing address's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1037,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping address of the cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1084,
								"name": "CreateAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1038,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The billing address of the cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 1084,
								"name": "CreateAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1039,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1040,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items of the cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1198,
							"name": "CreateLineItemDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1030,
						1031,
						1032,
						1033,
						1034,
						1035,
						1036,
						1037,
						1038,
						1039,
						1040
					]
				}
			]
		},
		{
			"id": 1053,
			"name": "UpdateCartDataDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the cart data."
					}
				]
			},
			"children": [
				{
					"id": 1054,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1055,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1056,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channel's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1057,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer that owns the cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1058,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1059,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping address's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1060,
					"name": "billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated billing address's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1061,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The billing address of the cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1097,
								"name": "UpdateAddressDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 1084,
								"name": "CreateAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1062,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping address of the cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1097,
								"name": "UpdateAddressDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 1084,
								"name": "CreateAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 1063,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1054,
						1055,
						1056,
						1057,
						1058,
						1059,
						1060,
						1061,
						1062,
						1063
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1041,
					"name": "UpdateCartDTO"
				}
			]
		},
		{
			"id": 1041,
			"name": "UpdateCartDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the cart."
					}
				]
			},
			"children": [
				{
					"id": 1043,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1054,
						"name": "UpdateCartDataDTO.region_id"
					}
				},
				{
					"id": 1044,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1055,
						"name": "UpdateCartDataDTO.customer_id"
					}
				},
				{
					"id": 1045,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated sales channel's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1056,
						"name": "UpdateCartDataDTO.sales_channel_id"
					}
				},
				{
					"id": 1046,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer that owns the cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1057,
						"name": "UpdateCartDataDTO.email"
					}
				},
				{
					"id": 1047,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1058,
						"name": "UpdateCartDataDTO.currency_code"
					}
				},
				{
					"id": 1048,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping address's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1059,
						"name": "UpdateCartDataDTO.shipping_address_id"
					}
				},
				{
					"id": 1049,
					"name": "billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated billing address's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1060,
						"name": "UpdateCartDataDTO.billing_address_id"
					}
				},
				{
					"id": 1050,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The billing address of the cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1097,
								"name": "UpdateAddressDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 1084,
								"name": "CreateAddressDTO",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1061,
						"name": "UpdateCartDataDTO.billing_address"
					}
				},
				{
					"id": 1051,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping address of the cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1097,
								"name": "UpdateAddressDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 1084,
								"name": "CreateAddressDTO",
								"package": "@medusajs/types"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1062,
						"name": "UpdateCartDataDTO.shipping_address"
					}
				},
				{
					"id": 1052,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1063,
						"name": "UpdateCartDataDTO.metadata"
					}
				},
				{
					"id": 1042,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1043,
						1044,
						1045,
						1046,
						1047,
						1048,
						1049,
						1050,
						1051,
						1052,
						1042
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1053,
					"name": "UpdateCartDataDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1577,
			"name": "CreateAdjustmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The adjustment to be created."
					}
				]
			},
			"children": [
				{
					"id": 1578,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to\nthis adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1579,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1580,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1581,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated promotion's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1582,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1578,
						1579,
						1580,
						1581,
						1582
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1327,
					"name": "CreateLineItemAdjustmentDTO"
				}
			]
		},
		{
			"id": 1591,
			"name": "UpdateAdjustmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the adjustment."
					}
				]
			},
			"children": [
				{
					"id": 1592,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1593,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to\nthis adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1594,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1595,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1596,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated promotion's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1597,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1592,
						1593,
						1594,
						1595,
						1596,
						1597
					]
				}
			]
		},
		{
			"id": 1327,
			"name": "CreateLineItemAdjustmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The line item adjustment to be created."
					}
				]
			},
			"children": [
				{
					"id": 1329,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to\nthis adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1578,
						"name": "CreateAdjustmentDTO.code"
					}
				},
				{
					"id": 1330,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1579,
						"name": "CreateAdjustmentDTO.amount"
					}
				},
				{
					"id": 1331,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1580,
						"name": "CreateAdjustmentDTO.description"
					}
				},
				{
					"id": 1332,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated promotion's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1581,
						"name": "CreateAdjustmentDTO.promotion_id"
					}
				},
				{
					"id": 1333,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1582,
						"name": "CreateAdjustmentDTO.provider_id"
					}
				},
				{
					"id": 1328,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1329,
						1330,
						1331,
						1332,
						1333,
						1328
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1577,
					"name": "CreateAdjustmentDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1334,
			"name": "UpsertLineItemAdjustmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the line item adjustment to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 1335,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1336,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1337,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to the\nadjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1338,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1339,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the line item adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1340,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated promotion's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1341,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1335,
						1336,
						1337,
						1338,
						1339,
						1340,
						1341
					]
				}
			]
		},
		{
			"id": 1570,
			"name": "CreateTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax line to be created."
					}
				]
			},
			"children": [
				{
					"id": 1571,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1572,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1573,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1574,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1575,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1576,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1571,
						1572,
						1573,
						1574,
						1575,
						1576
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1402,
					"name": "CreateLineItemTaxLineDTO"
				},
				{
					"type": "reference",
					"target": 1442,
					"name": "CreateShippingMethodTaxLineDTO"
				}
			]
		},
		{
			"id": 1583,
			"name": "UpdateTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the tax line."
					}
				]
			},
			"children": [
				{
					"id": 1584,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1585,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1586,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1587,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1588,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1589,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1590,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1584,
						1585,
						1586,
						1587,
						1588,
						1589,
						1590
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1409,
					"name": "UpdateLineItemTaxLineDTO"
				},
				{
					"type": "reference",
					"target": 1449,
					"name": "UpdateShippingMethodTaxLineDTO"
				}
			]
		},
		{
			"id": 1442,
			"name": "CreateShippingMethodTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method tax line to be created."
					}
				]
			},
			"children": [
				{
					"id": 1443,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1571,
						"name": "CreateTaxLineDTO.description"
					}
				},
				{
					"id": 1444,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1572,
						"name": "CreateTaxLineDTO.tax_rate_id"
					}
				},
				{
					"id": 1445,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1573,
						"name": "CreateTaxLineDTO.code"
					}
				},
				{
					"id": 1446,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1574,
						"name": "CreateTaxLineDTO.rate"
					}
				},
				{
					"id": 1447,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1575,
						"name": "CreateTaxLineDTO.provider_id"
					}
				},
				{
					"id": 1448,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1576,
						"name": "CreateTaxLineDTO.item_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1443,
						1444,
						1445,
						1446,
						1447,
						1448
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1570,
					"name": "CreateTaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1449,
			"name": "UpdateShippingMethodTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the shipping method tax line."
					}
				]
			},
			"children": [
				{
					"id": 1450,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1584,
						"name": "UpdateTaxLineDTO.id"
					}
				},
				{
					"id": 1451,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1585,
						"name": "UpdateTaxLineDTO.description"
					}
				},
				{
					"id": 1452,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1586,
						"name": "UpdateTaxLineDTO.tax_rate_id"
					}
				},
				{
					"id": 1453,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1587,
						"name": "UpdateTaxLineDTO.code"
					}
				},
				{
					"id": 1454,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1588,
						"name": "UpdateTaxLineDTO.rate"
					}
				},
				{
					"id": 1455,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1589,
						"name": "UpdateTaxLineDTO.provider_id"
					}
				},
				{
					"id": 1456,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1590,
						"name": "UpdateTaxLineDTO.item_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1450,
						1451,
						1452,
						1453,
						1454,
						1455,
						1456
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1583,
					"name": "UpdateTaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1402,
			"name": "CreateLineItemTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The line item tax line to be created."
					}
				]
			},
			"children": [
				{
					"id": 1403,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1571,
						"name": "CreateTaxLineDTO.description"
					}
				},
				{
					"id": 1404,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1572,
						"name": "CreateTaxLineDTO.tax_rate_id"
					}
				},
				{
					"id": 1405,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1573,
						"name": "CreateTaxLineDTO.code"
					}
				},
				{
					"id": 1406,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1574,
						"name": "CreateTaxLineDTO.rate"
					}
				},
				{
					"id": 1407,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1575,
						"name": "CreateTaxLineDTO.provider_id"
					}
				},
				{
					"id": 1408,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1576,
						"name": "CreateTaxLineDTO.item_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1403,
						1404,
						1405,
						1406,
						1407,
						1408
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1570,
					"name": "CreateTaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1409,
			"name": "UpdateLineItemTaxLineDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the line item tax line."
					}
				]
			},
			"children": [
				{
					"id": 1410,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1584,
						"name": "UpdateTaxLineDTO.id"
					}
				},
				{
					"id": 1411,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1585,
						"name": "UpdateTaxLineDTO.description"
					}
				},
				{
					"id": 1412,
					"name": "tax_rate_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated tax rate's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1586,
						"name": "UpdateTaxLineDTO.tax_rate_id"
					}
				},
				{
					"id": 1413,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1587,
						"name": "UpdateTaxLineDTO.code"
					}
				},
				{
					"id": 1414,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate of the tax line."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1588,
						"name": "UpdateTaxLineDTO.rate"
					}
				},
				{
					"id": 1415,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1589,
						"name": "UpdateTaxLineDTO.provider_id"
					}
				},
				{
					"id": 1416,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1590,
						"name": "UpdateTaxLineDTO.item_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1410,
						1411,
						1412,
						1413,
						1414,
						1415,
						1416
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1583,
					"name": "UpdateTaxLineDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1198,
			"name": "CreateLineItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The line item to be created."
					}
				]
			},
			"children": [
				{
					"id": 1199,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1200,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1201,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1202,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1203,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item in the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1204,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1205,
					"name": "product_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1206,
					"name": "product_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1207,
					"name": "product_subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1208,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1209,
					"name": "product_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The collection of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1210,
					"name": "product_handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1211,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated variant's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1212,
					"name": "variant_sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1213,
					"name": "variant_barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1214,
					"name": "variant_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1215,
					"name": "variant_option_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The option values of the associated variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1216,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1217,
					"name": "is_discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item is discountable."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1218,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item's amount is tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1219,
					"name": "compare_at_unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated price of the line item after applying promotions."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1220,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unit price of the line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1221,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax lines of the line item."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1570,
							"name": "CreateTaxLineDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1222,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments of the line item."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1577,
							"name": "CreateAdjustmentDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1223,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1199,
						1200,
						1201,
						1202,
						1203,
						1204,
						1205,
						1206,
						1207,
						1208,
						1209,
						1210,
						1211,
						1212,
						1213,
						1214,
						1215,
						1216,
						1217,
						1218,
						1219,
						1220,
						1221,
						1222,
						1223
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1172,
					"name": "CreateLineItemForCartDTO"
				}
			]
		},
		{
			"id": 1172,
			"name": "CreateLineItemForCartDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The line item to be created in a cart."
					}
				]
			},
			"children": [
				{
					"id": 1174,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1199,
						"name": "CreateLineItemDTO.title"
					}
				},
				{
					"id": 1175,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1200,
						"name": "CreateLineItemDTO.subtitle"
					}
				},
				{
					"id": 1176,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1201,
						"name": "CreateLineItemDTO.thumbnail"
					}
				},
				{
					"id": 1177,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item in the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1203,
						"name": "CreateLineItemDTO.quantity"
					}
				},
				{
					"id": 1178,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1204,
						"name": "CreateLineItemDTO.product_id"
					}
				},
				{
					"id": 1179,
					"name": "product_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1205,
						"name": "CreateLineItemDTO.product_title"
					}
				},
				{
					"id": 1180,
					"name": "product_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1206,
						"name": "CreateLineItemDTO.product_description"
					}
				},
				{
					"id": 1181,
					"name": "product_subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1207,
						"name": "CreateLineItemDTO.product_subtitle"
					}
				},
				{
					"id": 1182,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1208,
						"name": "CreateLineItemDTO.product_type"
					}
				},
				{
					"id": 1183,
					"name": "product_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The collection of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1209,
						"name": "CreateLineItemDTO.product_collection"
					}
				},
				{
					"id": 1184,
					"name": "product_handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1210,
						"name": "CreateLineItemDTO.product_handle"
					}
				},
				{
					"id": 1185,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated variant's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1211,
						"name": "CreateLineItemDTO.variant_id"
					}
				},
				{
					"id": 1186,
					"name": "variant_sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1212,
						"name": "CreateLineItemDTO.variant_sku"
					}
				},
				{
					"id": 1187,
					"name": "variant_barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1213,
						"name": "CreateLineItemDTO.variant_barcode"
					}
				},
				{
					"id": 1188,
					"name": "variant_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1214,
						"name": "CreateLineItemDTO.variant_title"
					}
				},
				{
					"id": 1189,
					"name": "variant_option_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The option values of the associated variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1215,
						"name": "CreateLineItemDTO.variant_option_values"
					}
				},
				{
					"id": 1190,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1216,
						"name": "CreateLineItemDTO.requires_shipping"
					}
				},
				{
					"id": 1191,
					"name": "is_discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item is discountable."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1217,
						"name": "CreateLineItemDTO.is_discountable"
					}
				},
				{
					"id": 1192,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item's amount is tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1218,
						"name": "CreateLineItemDTO.is_tax_inclusive"
					}
				},
				{
					"id": 1193,
					"name": "compare_at_unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated price of the line item after applying promotions."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1219,
						"name": "CreateLineItemDTO.compare_at_unit_price"
					}
				},
				{
					"id": 1194,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unit price of the line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1220,
						"name": "CreateLineItemDTO.unit_price"
					}
				},
				{
					"id": 1195,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax lines of the line item."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1570,
							"name": "CreateTaxLineDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1221,
						"name": "CreateLineItemDTO.tax_lines"
					}
				},
				{
					"id": 1196,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments of the line item."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1577,
							"name": "CreateAdjustmentDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1222,
						"name": "CreateLineItemDTO.adjustments"
					}
				},
				{
					"id": 1197,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 1223,
						"name": "CreateLineItemDTO.metadata"
					}
				},
				{
					"id": 1173,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 1202,
						"name": "CreateLineItemDTO.cart_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1174,
						1175,
						1176,
						1177,
						1178,
						1179,
						1180,
						1181,
						1182,
						1183,
						1184,
						1185,
						1186,
						1187,
						1188,
						1189,
						1190,
						1191,
						1192,
						1193,
						1194,
						1195,
						1196,
						1197,
						1173
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1198,
					"name": "CreateLineItemDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 1224,
			"name": "UpdateLineItemWithSelectorDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A pair of selectors and data, where the selectors determine which\nline items to update, and the data determines what to update\nin the line items."
					}
				]
			},
			"children": [
				{
					"id": 1225,
					"name": "selector",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to specify which line items to update."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1111,
								"name": "CartLineItemDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 1226,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in the line items."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1227,
								"name": "UpdateLineItemDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1225,
						1226
					]
				}
			]
		},
		{
			"id": 1227,
			"name": "UpdateLineItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a line item."
					}
				]
			},
			"children": [
				{
					"id": 1238,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.subtitle"
					}
				},
				{
					"id": 1239,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.thumbnail"
					}
				},
				{
					"id": 1235,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.cart_id"
					}
				},
				{
					"id": 1237,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.product_id"
					}
				},
				{
					"id": 1240,
					"name": "product_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.product_title"
					}
				},
				{
					"id": 1241,
					"name": "product_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.product_description"
					}
				},
				{
					"id": 1242,
					"name": "product_subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.product_subtitle"
					}
				},
				{
					"id": 1243,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.product_type"
					}
				},
				{
					"id": 1244,
					"name": "product_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The collection of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.product_collection"
					}
				},
				{
					"id": 1245,
					"name": "product_handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.product_handle"
					}
				},
				{
					"id": 1236,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated variant's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.variant_id"
					}
				},
				{
					"id": 1246,
					"name": "variant_sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.variant_sku"
					}
				},
				{
					"id": 1247,
					"name": "variant_barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.variant_barcode"
					}
				},
				{
					"id": 1248,
					"name": "variant_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the associated variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.variant_title"
					}
				},
				{
					"id": 1249,
					"name": "variant_option_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The option values of the associated variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.variant_option_values"
					}
				},
				{
					"id": 1250,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.requires_shipping"
					}
				},
				{
					"id": 1251,
					"name": "is_discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item is discountable."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.is_discountable"
					}
				},
				{
					"id": 1252,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the line item's amount is tax inclusive."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.is_tax_inclusive"
					}
				},
				{
					"id": 1253,
					"name": "compare_at_unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The calculated price of the line item after applying promotions."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.compare_at_unit_price"
					}
				},
				{
					"id": 1228,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1229,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1230,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item in the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1231,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unit price of the line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1232,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Omit.metadata"
					}
				},
				{
					"id": 1233,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax lines of the line item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1570,
									"name": "CreateTaxLineDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1583,
									"name": "UpdateTaxLineDTO",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 1234,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments of the line item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1577,
									"name": "CreateAdjustmentDTO",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1591,
									"name": "UpdateAdjustmentDTO",
									"package": "@medusajs/types"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1238,
						1239,
						1235,
						1237,
						1240,
						1241,
						1242,
						1243,
						1244,
						1245,
						1236,
						1246,
						1247,
						1248,
						1249,
						1250,
						1251,
						1252,
						1253,
						1228,
						1229,
						1230,
						1231,
						1232,
						1233,
						1234
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 1198,
							"name": "CreateLineItemDTO",
							"package": "@medusajs/types"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "tax_lines"
								},
								{
									"type": "literal",
									"value": "adjustments"
								},
								{
									"type": "literal",
									"value": "title"
								},
								{
									"type": "literal",
									"value": "quantity"
								},
								{
									"type": "literal",
									"value": "unit_price"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 1291,
			"name": "CreateShippingMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method to be created."
					}
				]
			},
			"children": [
				{
					"id": 1292,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1293,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1294,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1295,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1296,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data of the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1297,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax lines of the shipping method."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1570,
							"name": "CreateTaxLineDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1298,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments of the shipping method."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1577,
							"name": "CreateAdjustmentDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1292,
						1293,
						1294,
						1295,
						1296,
						1297,
						1298
					]
				}
			]
		},
		{
			"id": 1299,
			"name": "CreateShippingMethodForSingleCartDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method to be created in a cart."
					}
				]
			},
			"children": [
				{
					"id": 1300,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1301,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1302,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1303,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data of the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1304,
					"name": "tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax lines of the shipping method."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1570,
							"name": "CreateTaxLineDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1305,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments of the shipping method."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1577,
							"name": "CreateAdjustmentDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1300,
						1301,
						1302,
						1303,
						1304,
						1305
					]
				}
			]
		},
		{
			"id": 1363,
			"name": "CreateShippingMethodAdjustmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method adjustment to be created."
					}
				]
			},
			"children": [
				{
					"id": 1364,
					"name": "shipping_method_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping method's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1365,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to\nthis adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1366,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1367,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the shipping method adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1368,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated promotion's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1369,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1364,
						1365,
						1366,
						1367,
						1368,
						1369
					]
				}
			]
		},
		{
			"id": 1370,
			"name": "UpdateShippingMethodAdjustmentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the shipping method adjustment."
					}
				]
			},
			"children": [
				{
					"id": 1371,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping method adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1372,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion that lead to\nthis adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1373,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to adjust the original amount with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1569,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1374,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the shipping method adjustment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1375,
					"name": "promotion_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated promotion's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1376,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1371,
						1372,
						1373,
						1374,
						1375,
						1376
					]
				}
			]
		},
		{
			"id": 586,
			"name": "ICartModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Cart Module."
					}
				]
			},
			"children": [
				{
					"id": 587,
					"name": "retrieveCart",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 588,
							"name": "retrieveCart",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a cart by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved cart."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a cart by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst cart = await cartModuleService.retrieveCart(\"cart_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst cart = await cartModuleService.retrieveCart(\"cart_123\", {\n  relations: [\"shipping_address\"],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 589,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 590,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the cart is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a cart."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 950,
												"name": "CartDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 591,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 950,
										"name": "CartDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 592,
					"name": "listCarts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 593,
							"name": "listCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of carts based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of carts."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of carts using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst carts = await cartModuleService.listCarts({\n  id: [\"cart_123\", \"cart_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the carts:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst carts = await cartModuleService.listCarts(\n  {\n    id: [\"cart_123\", \"cart_321\"],\n  },\n  {\n    relations: [\"shipping_address\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst carts = await cartModuleService.listCarts(\n  {\n    id: [\"cart_123\", \"cart_321\"],\n  },\n  {\n    relations: [\"shipping_address\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 594,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved carts."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1020,
										"name": "FilterableCartProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 595,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the cart is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a cart."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 950,
												"name": "CartDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 596,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 950,
											"name": "CartDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 597,
					"name": "listAndCountCarts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 598,
							"name": "listAndCountCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of carts along with the total count of available carts satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of carts along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of carts using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [carts, count] = await cartModuleService.listAndCountCarts({\n  id: [\"cart_123\", \"cart_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the carts:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [carts, count] = await cartModuleService.listAndCountCarts(\n  {\n    id: [\"cart_123\", \"cart_321\"],\n  },\n  {\n    relations: [\"shipping_address\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [carts, count] = await cartModuleService.listAndCountCarts(\n  {\n    id: [\"cart_123\", \"cart_321\"],\n  },\n  {\n    relations: [\"shipping_address\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 599,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved carts."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1020,
										"name": "FilterableCartProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 600,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the cart is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a cart."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 950,
												"name": "CartDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 601,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 950,
													"name": "CartDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 602,
					"name": "createCarts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 603,
							"name": "createCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates carts."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created carts."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst carts = await cartModuleService.createCarts([\n  {\n    currency_code: \"usd\",\n  },\n  {\n    currency_code: \"eur\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 604,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The carts to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1029,
											"name": "CreateCartDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 605,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 950,
											"name": "CartDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 606,
							"name": "createCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a cart."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created cart."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst cart = await cartModuleService.createCarts({\n  currency_code: \"usd\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 607,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1029,
										"name": "CreateCartDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 608,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 950,
										"name": "CartDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 609,
					"name": "updateCarts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 610,
							"name": "updateCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing carts."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated carts."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst carts = await cartModuleService.updateCarts([\n  {\n    id: \"cart_123\",\n    region_id: \"reg_123\",\n  },\n  {\n    id: \"cart_321\",\n    customer_id: \"cus_123\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 611,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the carts."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1041,
											"name": "UpdateCartDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 950,
											"name": "CartDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 612,
							"name": "updateCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing cart."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated cart."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst cart = await cartModuleService.updateCarts(\"cart_123\", {\n  region_id: \"reg_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 613,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 614,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the cart data."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1053,
										"name": "UpdateCartDataDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 615,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 950,
										"name": "CartDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 616,
							"name": "updateCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing carts matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated carts."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst carts = await cartModuleService.updateCarts(\n  {\n    currency_code: \"usd\",\n  },\n  {\n    region_id: \"reg_123\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 617,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters that specify which carts to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 950,
												"name": "CartDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 618,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the carts."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1053,
										"name": "UpdateCartDataDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 619,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 950,
											"name": "CartDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 620,
					"name": "deleteCarts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 621,
							"name": "deleteCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes carts by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the carts are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteCarts([\"cart_123\", \"cart_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 622,
									"name": "cartIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of cart IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 623,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 624,
							"name": "deleteCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a cart by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the carts are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteCarts(\"cart_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 625,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 626,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 627,
					"name": "listAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 628,
							"name": "listAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of addresses based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of addresses."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of addresses using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst addresses = await cartModuleService.listAddresses({\n  id: [\"caaddr_123\", \"caaddr_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst addresses = await cartModuleService.listAddresses(\n  {\n    id: [\"caaddr_123\", \"caaddr_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 629,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved addresss."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1064,
										"name": "FilterableAddressProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 630,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the address is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a address."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1068,
												"name": "CartAddressDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 631,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1068,
											"name": "CartAddressDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 632,
					"name": "createAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 633,
							"name": "createAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates addresses."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created addresses."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst addresses = await cartModuleService.createAddresses([\n  {\n    address_1: \"412 E Cheyenne Rd\",\n    country_code: \"us\",\n  },\n  {\n    first_name: \"Genevieve\",\n    last_name: \"Fox\",\n    address_1: \"17350 Northwest Fwy\",\n    country_code: \"us\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 634,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The addresss to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1084,
											"name": "CreateAddressDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 635,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1068,
											"name": "CartAddressDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 636,
							"name": "createAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created address."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst address = await cartModuleService.createAddresses({\n  first_name: \"Genevieve\",\n  last_name: \"Fox\",\n  address_1: \"17350 Northwest Fwy\",\n  country_code: \"us\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 637,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1084,
										"name": "CreateAddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 638,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1068,
										"name": "CartAddressDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 639,
					"name": "updateAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 640,
							"name": "updateAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing addresses."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated addresses."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst addresses = await cartModuleService.updateAddresses([\n  {\n    id: \"caaddr_123\",\n    first_name: \"Leroy\",\n  },\n  {\n    id: \"caaddr_321\",\n    last_name: \"Hunt\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 641,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the addresss."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1097,
											"name": "UpdateAddressDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 642,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1068,
											"name": "CartAddressDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 643,
							"name": "updateAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing address."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated address."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst address = await cartModuleService.updateAddresses({\n  id: \"caaddr_123\",\n  first_name: \"Leroy\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 644,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the address."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1097,
										"name": "UpdateAddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 645,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1068,
										"name": "CartAddressDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 646,
					"name": "deleteAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 647,
							"name": "deleteAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes addresses by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the addresses are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteAddresses([\n  \"caaddr_123\",\n  \"caaddr_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 648,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the cart."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 649,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 650,
							"name": "deleteAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes an address by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the address are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteAddresses(\"caaddr_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 651,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the cart."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 652,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 653,
					"name": "retrieveLineItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 654,
							"name": "retrieveLineItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a line item by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved line item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a line item by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItem =\n  await cartModuleService.retrieveLineItem(\"cali_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItem = await cartModuleService.retrieveLineItem(\n  \"cali_123\",\n  {\n    relations: [\"cart\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 655,
									"name": "itemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 656,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the line item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a line item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1111,
												"name": "CartLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 657,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1111,
										"name": "CartLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 658,
					"name": "listLineItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 659,
							"name": "listLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of line items based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of line items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of line items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItems = await cartModuleService.listLineItems({\n  id: [\"cali_123\", \"cali_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the line items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItems = await cartModuleService.listLineItems(\n  {\n    id: [\"cali_123\", \"cali_321\"],\n  },\n  {\n    relations: [\"cart\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItems = await cartModuleService.listLineItems(\n  {\n    id: [\"cali_123\", \"cali_321\"],\n  },\n  {\n    relations: [\"cart\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 660,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved line items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1164,
										"name": "FilterableLineItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 661,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the line item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a line item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1111,
												"name": "CartLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 662,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1111,
											"name": "CartLineItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 663,
					"name": "addLineItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 664,
							"name": "addLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds a line item to a cart"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItem = await cartModuleService.addLineItems({\n  cart_id: \"cart_123\",\n  title: \"Shirt\",\n  quantity: 2,\n  unit_price: 4000,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 665,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item to create and add to the cart.\nThe cart is specified in the "
											},
											{
												"kind": "code",
												"text": "`cart_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1172,
										"name": "CreateLineItemForCartDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1111,
											"name": "CartLineItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 666,
							"name": "addLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds line items to carts."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItems = await cartModuleService.addLineItems([\n  {\n    cart_id: \"cart_123\",\n    title: \"Shirt\",\n    quantity: 2,\n    unit_price: 4000,\n  },\n  {\n    cart_id: \"cart_123\",\n    title: \"Pants\",\n    quantity: 1,\n    unit_price: 3000,\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 667,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item to create and add to the carts.\nThe cart is specified in the "
											},
											{
												"kind": "code",
												"text": "`cart_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1172,
											"name": "CreateLineItemForCartDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1111,
											"name": "CartLineItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 668,
							"name": "addLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds line items to a cart."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItems = await cartModuleService.addLineItems(\n  \"cart_123\",\n  [\n    {\n      title: \"Shirt\",\n      quantity: 2,\n      unit_price: 4000,\n    },\n    {\n      title: \"Pants\",\n      quantity: 1,\n      unit_price: 3000,\n    },\n  ]\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 669,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 670,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line items to be created and added."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1198,
											"name": "CreateLineItemDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 671,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1111,
											"name": "CartLineItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 672,
					"name": "updateLineItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 673,
							"name": "updateLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing line items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated line items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItems = await cartModuleService.updateLineItems([\n  {\n    selector: {\n      id: \"cali_123\",\n    },\n    data: {\n      quantity: 2,\n    },\n  },\n  {\n    selector: {\n      variant_sku: \"PANTS\",\n    },\n    data: {\n      unit_price: 3000,\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 674,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of objects, each holding the filters that specify which items\nto update, and the attributes to update in the items."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1224,
											"name": "UpdateLineItemWithSelectorDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1111,
											"name": "CartLineItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 675,
							"name": "updateLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing line items matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated line items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItems = await cartModuleService.updateLineItems(\n  {\n    variant_sku: \"PANTS\",\n  },\n  {\n    unit_price: 4000,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 676,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters that specify which line items to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1111,
												"name": "CartLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 677,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the line items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1227,
												"name": "UpdateLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 678,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1111,
											"name": "CartLineItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 679,
							"name": "updateLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing line item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated line item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItem = await cartModuleService.updateLineItems(\n  \"cali_123\",\n  {\n    unit_price: 3000,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 680,
									"name": "lineId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 681,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the line item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1227,
												"name": "UpdateLineItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 682,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1111,
										"name": "CartLineItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 683,
					"name": "listShippingMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 684,
							"name": "listShippingMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping methods based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping methods."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping methods using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethods =\n  await cartModuleService.listShippingMethods(\n    {\n      id: [\"casm_123\", \"casm_321\"],\n    },\n    {}\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping methods:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethods =\n  await cartModuleService.listShippingMethods(\n    {\n      id: [\"casm_123\", \"casm_321\"],\n    },\n    {\n      relations: [\"cart\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethods =\n  await cartModuleService.listShippingMethods(\n    {\n      id: [\"casm_123\", \"casm_321\"],\n    },\n    {\n      relations: [\"cart\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 685,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping methods."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1254,
										"name": "FilterableShippingMethodProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 686,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping method is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping method."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1261,
												"name": "CartShippingMethodDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 687,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1261,
											"name": "CartShippingMethodDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 688,
					"name": "addShippingMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 689,
							"name": "addShippingMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds a shipping method to carts."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethod =\n  await cartModuleService.addShippingMethods({\n    cart_id: \"cart_123\",\n    name: \"UPS\",\n    amount: 3000,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 690,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method to be created and added to the carts.\nThe cart is specified in the "
											},
											{
												"kind": "code",
												"text": "`cart_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1291,
										"name": "CreateShippingMethodDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1261,
										"name": "CartShippingMethodDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 691,
							"name": "addShippingMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds shipping methods to carts."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping methods."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethods =\n  await cartModuleService.addShippingMethods([\n    {\n      cart_id: \"cart_123\",\n      name: \"UPS\",\n      amount: 3000,\n    },\n    {\n      cart_id: \"cart_123\",\n      name: \"FedEx\",\n      amount: 2000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 692,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping methods to be created and added to the carts.\nThe cart is specified in the "
											},
											{
												"kind": "code",
												"text": "`cart_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1291,
											"name": "CreateShippingMethodDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1261,
											"name": "CartShippingMethodDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 693,
							"name": "addShippingMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds shipping methods to a cart."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping methods."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethods =\n  await cartModuleService.addShippingMethods(\"cart_123\", [\n    {\n      name: \"UPS\",\n      amount: 3000,\n    },\n    {\n      name: \"FedEx\",\n      amount: 2000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 694,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 695,
									"name": "methods",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping methods to be created and added."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1299,
											"name": "CreateShippingMethodForSingleCartDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 696,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1261,
											"name": "CartShippingMethodDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 697,
					"name": "listLineItemAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 698,
							"name": "listLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of line item adjustments based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of line item adjustments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of line item adjustments using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItemAdjustments =\n  await cartModuleService.listLineItemAdjustments({\n    id: [\"caliadj_123\", \"caliadj_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the line item adjustments:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItemAdjustments =\n  await cartModuleService.listLineItemAdjustments(\n    {\n      id: [\"caliadj_123\", \"caliadj_321\"],\n    },\n    {\n      relations: [\"item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItemAdjustments =\n  await cartModuleService.listLineItemAdjustments(\n    {\n      id: [\"caliadj_123\", \"caliadj_321\"],\n    },\n    {\n      relations: [\"item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 699,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved line item adjustments."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1306,
										"name": "FilterableLineItemAdjustmentProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 700,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the line item adjustment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a line item adjustment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1314,
												"name": "LineItemAdjustmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 701,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1314,
											"name": "LineItemAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 702,
					"name": "addLineItemAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 703,
							"name": "addLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds line item adjustments to line items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item adjustments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItemAdjustments =\n  await cartModuleService.addLineItemAdjustments([\n    {\n      item_id: \"caliadj_123\",\n      code: \"50%OFF\",\n      amount: 3000,\n    },\n    {\n      item_id: \"caliadj_321\",\n      code: \"10%OFF\",\n      amount: 3000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 704,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item adjustments to be created and added to line items.\nThe line item is specified by the "
											},
											{
												"kind": "code",
												"text": "`item_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1327,
											"name": "CreateLineItemAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1314,
											"name": "LineItemAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 705,
							"name": "addLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds a line item adjustment to a line item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item adjustment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItemAdjustments =\n  await cartModuleService.addLineItemAdjustments({\n    item_id: \"caliadj_123\",\n    code: \"50%OFF\",\n    amount: 3000,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 706,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item adjustment to be created and added to a line item.\nThe line item is specified by the "
											},
											{
												"kind": "code",
												"text": "`item_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1327,
										"name": "CreateLineItemAdjustmentDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1314,
											"name": "LineItemAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 707,
							"name": "addLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds line item adjustments to line items in a cart."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item adjustment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItemAdjustments =\n  await cartModuleService.addLineItemAdjustments(\"cart_123\", [\n    {\n      item_id: \"caliadj_123\",\n      code: \"50%OFF\",\n      amount: 3000,\n    },\n    {\n      item_id: \"caliadj_321\",\n      code: \"10%OFF\",\n      amount: 2000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 708,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 709,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item adjustments to be created and added to line items.\nThe line item is specified by the "
											},
											{
												"kind": "code",
												"text": "`item_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1327,
											"name": "CreateLineItemAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1314,
											"name": "LineItemAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 710,
					"name": "setLineItemAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 711,
							"name": "setLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method set the line item adjustments of line items in a cart. The existing line item adjustments, except those\nincluded in the specified list, of an item are removed and replaced with the specified adjustments."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item adjustments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItemAdjustments =\n  await cartModuleService.setLineItemAdjustments(\"cart_123\", [\n    {\n      id: \"adj_123\",\n      item_id: \"caliadj_123\",\n    },\n    {\n      item_id: \"caliadj_123\",\n      code: \"10%OFF\",\n      amount: 2000,\n    },\n    {\n      item_id: \"caliadj_321\",\n      code: \"50%OFF\",\n      amount: 3000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 712,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 713,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item adjustments to add to the line items.\nThe line item is specified by the "
											},
											{
												"kind": "code",
												"text": "`item_id`"
											},
											{
												"kind": "text",
												"text": " field. If the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field is specified, the adjustment\nis kept in the line item's adjustment and its attributes can be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1334,
											"name": "UpsertLineItemAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 714,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1314,
											"name": "LineItemAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 715,
					"name": "listShippingMethodAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 716,
							"name": "listShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping method adjustments based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping method adjustments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping method adjustments using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodAdjustments =\n  await cartModuleService.listShippingMethodAdjustments({\n    id: [\"casmadj_123\", \"casmadj_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping method adjustments:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodAdjustments =\n  await cartModuleService.listShippingMethodAdjustments(\n    {\n      id: [\"casmadj_123\", \"casmadj_321\"],\n    },\n    {\n      relations: [\"shipping_method\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodAdjustments =\n  await cartModuleService.listShippingMethodAdjustments(\n    {\n      id: [\"casmadj_123\", \"casmadj_321\"],\n    },\n    {\n      relations: [\"shipping_method\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 717,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping method adjustments."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1342,
										"name": "FilterableShippingMethodAdjustmentProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 718,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping method adjustment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping method adjustment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1350,
												"name": "ShippingMethodAdjustmentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 719,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1350,
											"name": "ShippingMethodAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 720,
					"name": "addShippingMethodAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 721,
							"name": "addShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds shipping method adjustments to shipping methods."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method adjustments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodAdjustments =\n  await cartModuleService.addShippingMethodAdjustments([\n    {\n      shipping_method_id: \"casm_123\",\n      code: \"FREESHIPPING\",\n      amount: 3000,\n    },\n    {\n      shipping_method_id: \"casm_321\",\n      code: \"10%OFF\",\n      amount: 1500,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 722,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method adjustments to be created and added to\nshipping methods. The shipping method is specified by the "
											},
											{
												"kind": "code",
												"text": "`shipping_method_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1363,
											"name": "CreateShippingMethodAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1350,
											"name": "ShippingMethodAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 723,
							"name": "addShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds a shipping method adjustment to a shipping method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method adjustment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodAdjustment =\n  await cartModuleService.addShippingMethodAdjustments({\n    shipping_method_id: \"casm_123\",\n    code: \"FREESHIPPING\",\n    amount: 3000,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 724,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method adjustment to be created and added to a\nshipping method. The shipping method is specified by the "
											},
											{
												"kind": "code",
												"text": "`shipping_method_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1363,
										"name": "CreateShippingMethodAdjustmentDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1350,
										"name": "ShippingMethodAdjustmentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 725,
							"name": "addShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds shipping method adjustments to shipping methods in a cart."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method adjustments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodAdjustments =\n  await cartModuleService.addShippingMethodAdjustments(\n    \"cart_123\",\n    [\n      {\n        shipping_method_id: \"casm_123\",\n        code: \"FREESHIPPING\",\n        amount: 3000,\n      },\n      {\n        shipping_method_id: \"casm_321\",\n        code: \"10%OFF\",\n        amount: 1500,\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 726,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 727,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method adjustments to be created and added to\nshipping methods. The shipping method is specified by the "
											},
											{
												"kind": "code",
												"text": "`shipping_method_id`"
											},
											{
												"kind": "text",
												"text": " field."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1363,
											"name": "CreateShippingMethodAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 728,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1350,
											"name": "ShippingMethodAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 729,
					"name": "setShippingMethodAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 730,
							"name": "setShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method sets the shipping method adjustment of shipping methods in a cart. The existing shipping method adjustments,\nexcept those included in the specified list, of an item are removed and replaced with the specified adjustments."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method adjustments."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodAdjustments =\n  await cartModuleService.setShippingMethodAdjustments(\n    \"cart_123\",\n    [\n      {\n        id: \"casmadj_123\",\n        shipping_method_id: \"casm_123\",\n        code: \"FREESHIPPING\",\n      },\n      {\n        shipping_method_id: \"casm_321\",\n        code: \"10%OFF\",\n        amount: 1500,\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 731,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 732,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method adjustments to add to the shipping\nmethod. If the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field is specified, the adjustment is kept in the shipping method's adjustment and its attributes can be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 1363,
													"name": "CreateShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "reference",
													"target": 1370,
													"name": "UpdateShippingMethodAdjustmentDTO",
													"package": "@medusajs/types"
												}
											]
										}
									}
								},
								{
									"id": 733,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1350,
											"name": "ShippingMethodAdjustmentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 734,
					"name": "listLineItemTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 735,
							"name": "listLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of line item tax lines based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of line item tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of line item tax lines using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItemTaxLines =\n  await cartModuleService.listLineItemTaxLines({\n    id: [\"calitxl_123\", \"calitxl_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the line item tax lines:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItemTaxLines =\n  await cartModuleService.listLineItemTaxLines(\n    {\n      id: [\"calitxl_123\", \"calitxl_321\"],\n    },\n    {\n      relations: [\"item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst lineItemTaxLines =\n  await cartModuleService.listLineItemTaxLines(\n    {\n      id: [\"calitxl_123\", \"calitxl_321\"],\n    },\n    {\n      relations: [\"item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 736,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved line item tax lines."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1377,
										"name": "FilterableLineItemTaxLineProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 737,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the line item tax line is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a line item tax line."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1387,
												"name": "LineItemTaxLineDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 738,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1387,
											"name": "LineItemTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 739,
					"name": "addLineItemTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 740,
							"name": "addLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates and adds line item tax lines."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItemTaxLines =\n  await cartModuleService.addLineItemTaxLines([\n    {\n      code: \"1000\",\n      rate: 10,\n    },\n    {\n      code: \"1234\",\n      rate: 20,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 741,
									"name": "taxLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item tax lines to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1402,
											"name": "CreateLineItemTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1387,
											"name": "LineItemTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 742,
							"name": "addLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates and adds a line item tax line."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item tax line."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItemTaxLines =\n  await cartModuleService.addLineItemTaxLines({\n    code: \"1000\",\n    rate: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 743,
									"name": "taxLine",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item tax line to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1402,
										"name": "CreateLineItemTaxLineDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1387,
										"name": "LineItemTaxLineDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 744,
							"name": "addLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates and adds one or more line item tax lines to a cart."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItemTaxLines =\n  await cartModuleService.addLineItemTaxLines(\"cart_123\", {\n    code: \"1000\",\n    rate: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 745,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 746,
									"name": "taxLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item tax lines to add.\nYou can specify one or more items."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1402,
												"name": "CreateLineItemTaxLineDTO",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1402,
													"name": "CreateLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 747,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1387,
											"name": "LineItemTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 748,
					"name": "setLineItemTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 749,
							"name": "setLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method sets the line item tax lines in a cart. The existing line item tax lines,\nexcept those included in the specified list, are removed and replaced with the specified tax lines."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added line item tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst lineItemTaxLines =\n  await cartModuleService.setLineItemTaxLines(\"cart_123\", [\n    {\n      code: \"1000\",\n      rate: 10,\n    },\n    {\n      code: \"1234\",\n      rate: 20,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 750,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 751,
									"name": "taxLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item tax lines to add.\nIf the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field is specified, the tax line is kept and its attributes can be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 1402,
													"name": "CreateLineItemTaxLineDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "reference",
													"target": 1409,
													"name": "UpdateLineItemTaxLineDTO",
													"package": "@medusajs/types"
												}
											]
										}
									}
								},
								{
									"id": 752,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1387,
											"name": "LineItemTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 753,
					"name": "listShippingMethodTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 754,
							"name": "listShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of shipping method tax lines based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of shipping method tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of shipping method tax lines using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodTaxLines =\n  await cartModuleService.listShippingMethodTaxLines({\n    id: [\"casmtxl_123\", \"casmtxl_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the shipping method tax lines:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodTaxLines =\n  await cartModuleService.listShippingMethodTaxLines(\n    {\n      id: [\"casmtxl_123\", \"casmtxl_321\"],\n    },\n    {\n      relations: [\"shipping_method\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodTaxLines =\n  await cartModuleService.listShippingMethodTaxLines(\n    {\n      id: [\"casmtxl_123\", \"casmtxl_321\"],\n    },\n    {\n      relations: [\"shipping_method\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 755,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved shipping method tax lines."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1417,
										"name": "FilterableShippingMethodTaxLineProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 756,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the shipping method tax line is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a shipping method tax line."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 937,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1427,
												"name": "ShippingMethodTaxLineDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 757,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1427,
											"name": "ShippingMethodTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 758,
					"name": "addShippingMethodTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 759,
							"name": "addShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates and adds shipping method tax lines."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodTaxLines =\n  await cartModuleService.addShippingMethodTaxLines([\n    {\n      code: \"1000\",\n      rate: 10,\n    },\n    {\n      code: \"1234\",\n      rate: 20,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 760,
									"name": "taxLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method tax lines to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1442,
											"name": "CreateShippingMethodTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1427,
											"name": "ShippingMethodTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 761,
							"name": "addShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates and adds a shipping method tax line."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method tax line."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodTaxLine =\n  await cartModuleService.addShippingMethodTaxLines({\n    code: \"1000\",\n    rate: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 762,
									"name": "taxLine",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method tax line to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1442,
										"name": "CreateShippingMethodTaxLineDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1427,
										"name": "ShippingMethodTaxLineDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 763,
							"name": "addShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates and adds one or more shipping method tax lines to a cart."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodTaxLines =\n  await cartModuleService.addShippingMethodTaxLines(\n    \"cart_123\",\n    [\n      {\n        code: \"1000\",\n        rate: 10,\n      },\n      {\n        code: \"1234\",\n        rate: 20,\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 764,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 765,
									"name": "taxLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping item tax lines to add.\nIf the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field is specified, the tax line is kept and its attributes can be updated."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1442,
												"name": "CreateShippingMethodTaxLineDTO",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1442,
													"name": "CreateShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 766,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1427,
											"name": "ShippingMethodTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 767,
					"name": "setShippingMethodTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 768,
							"name": "setShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method sets the shipping item tax lines in a cart. The shipping line item tax lines,\nexcept those included in the specified list, are removed and replaced with the specified tax lines."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The added shipping method tax lines."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst shippingMethodTaxLines =\n  await cartModuleService.setShippingMethodTaxLines(\n    \"cart_123\",\n    [\n      {\n        code: \"1000\",\n        rate: 10,\n      },\n      {\n        code: \"1234\",\n        rate: 20,\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 769,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The cart's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 770,
									"name": "taxLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping item tax lines to add.\nIf the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field is specified, the tax line is kept and its attributes can be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 1442,
													"name": "CreateShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												},
												{
													"type": "reference",
													"target": 1449,
													"name": "UpdateShippingMethodTaxLineDTO",
													"package": "@medusajs/types"
												}
											]
										}
									}
								},
								{
									"id": 771,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1427,
											"name": "ShippingMethodTaxLineDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 772,
					"name": "deleteLineItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 773,
							"name": "deleteLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes line items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the line items are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteLineItems([\n  \"cali_123\",\n  \"cali_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 774,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line items."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 775,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 776,
							"name": "deleteLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a line item by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when a line item is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteLineItems(\"cali_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 777,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the line item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 778,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 779,
					"name": "deleteShippingMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 780,
							"name": "deleteShippingMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes shipping methods by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping methods are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteShippingMethods([\n  \"casm_123\",\n  \"casm_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 781,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping methods."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 782,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 783,
							"name": "deleteShippingMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a shipping method by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping method is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteShippingMethods(\"casm_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 784,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping method."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 785,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 786,
					"name": "deleteLineItemAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 787,
							"name": "deleteLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes line item adjustments by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the line item adjustments are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteLineItemAdjustments([\n  \"caliadj_123\",\n  \"caliadj_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 788,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line item adjustments."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 789,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 790,
							"name": "deleteLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a line item adjustment by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the line item adjustment is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteLineItemAdjustments(\n  \"caliadj_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 791,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the line item adjustment."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 792,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 793,
					"name": "deleteShippingMethodAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 794,
							"name": "deleteShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes shipping method adjustments by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping method adjustments are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteShippingMethodAdjustments([\n  \"casmadj_123\",\n  \"casmadj_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 795,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping method adjustments."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 796,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 797,
							"name": "deleteShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a shipping method adjustment by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when shipping method adjustment is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteShippingMethodAdjustments(\n  \"casmadj_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 798,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping method adjustment."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 799,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 800,
					"name": "deleteLineItemTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 801,
							"name": "deleteLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes line item tax lines by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the line item tax lines are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteLineItemTaxLines([\n  \"calitxl_123\",\n  \"calitxl_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 802,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line item tax lines."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 803,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 804,
							"name": "deleteLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a line item tax line by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the line item tax line is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteLineItemTaxLines(\"calitxl_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 805,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the line item tax line."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 806,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 807,
					"name": "deleteShippingMethodTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 808,
							"name": "deleteShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes shipping method tax lines by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping method tax lines are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteShippingMethodTaxLines([\n  \"casmtxl_123\",\n  \"casmtxl_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 809,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping method tax lines."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 810,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 811,
							"name": "deleteShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a shipping method tax line by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the shipping method tax line is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.deleteShippingMethodTaxLines(\n  \"casmtxl_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 812,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the shipping method tax line."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 813,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 814,
					"name": "softDeleteCarts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 815,
							"name": "softDeleteCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes carts by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated line item.\nThe object's keys are the ID attribute names of the cart entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`item_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the cart through this relation, such as the IDs of associated line item.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.softDeleteCarts([\"cart_123\", \"cart_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 816,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 817,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the carts."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 818,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1457,
										"typeArguments": [
											{
												"type": "reference",
												"target": 816,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 819,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 816,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 820,
					"name": "restoreCarts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 821,
							"name": "restoreCarts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted carts by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated line item.\nThe object's keys are the ID attribute names of the cart entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`item_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the cart through this relation,\nsuch as the IDs of associated line item.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.restoreCarts([\"cart_123\", \"cart_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 822,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 823,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the carts."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 824,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the carts. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the cart's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`items`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1460,
										"typeArguments": [
											{
												"type": "reference",
												"target": 822,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 825,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 822,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 826,
					"name": "softDeleteAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 827,
							"name": "softDeleteAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes addresses by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.softDeleteAddresses([\n  \"caaddr_123\",\n  \"caaddr_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 828,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 829,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the addresses."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 830,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1457,
										"typeArguments": [
											{
												"type": "reference",
												"target": 828,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 831,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 828,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 832,
					"name": "restoreAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 833,
							"name": "restoreAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted addresses by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.restoreAddresses([\n  \"caaddr_123\",\n  \"caaddr_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 834,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 835,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the addresses."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 836,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the addresses. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the address's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1460,
										"typeArguments": [
											{
												"type": "reference",
												"target": 834,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 837,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 834,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 838,
					"name": "softDeleteLineItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 839,
							"name": "softDeleteLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes line items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated tax lines.\nThe object's keys are the ID attribute names of the line item entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`tax_line_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the line item through this relation, such as the IDs of associated tax lines.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.softDeleteLineItems([\n  \"cali_123\",\n  \"cali_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 840,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 841,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line items."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 842,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1457,
										"typeArguments": [
											{
												"type": "reference",
												"target": 840,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 843,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 840,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 844,
					"name": "restoreLineItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 845,
							"name": "restoreLineItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted line items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated tax line.\nThe object's keys are the ID attribute names of the line item entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`tax_line_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the line item through this relation,\nsuch as the IDs of associated tax line.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.restoreLineItems([\n  \"cali_123\",\n  \"cali_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 846,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 847,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line items."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 848,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the line items. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the line item's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`tax_lines`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1460,
										"typeArguments": [
											{
												"type": "reference",
												"target": 846,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 849,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 846,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 850,
					"name": "softDeleteShippingMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 851,
							"name": "softDeleteShippingMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes shipping methods by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated tax lines.\nThe object's keys are the ID attribute names of the shipping method entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`tax_line_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the shipping method through this relation, such as the IDs of associated tax line.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.softDeleteShippingMethods([\n  \"casm_123\",\n  \"casm_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 852,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 853,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping methods."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 854,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1457,
										"typeArguments": [
											{
												"type": "reference",
												"target": 852,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 855,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 852,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 856,
					"name": "restoreShippingMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 857,
							"name": "restoreShippingMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted shipping methods by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated tax lines.\nThe object's keys are the ID attribute names of the shipping method entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`tax_line_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the shipping method through this relation,\nsuch as the IDs of associated tax lines.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.restoreShippingMethods([\n  \"casm_123\",\n  \"casm_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 858,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 859,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping methods."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 860,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the shipping methods. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the shipping method's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`tax_lines`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1460,
										"typeArguments": [
											{
												"type": "reference",
												"target": 858,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 861,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 858,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 862,
					"name": "softDeleteLineItemAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 863,
							"name": "softDeleteLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes line item adjustments by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.softDeleteLineItemAdjustments([\n  \"caliadj_123\",\n  \"caliadj_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 864,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 865,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line item adjustments."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 866,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1457,
										"typeArguments": [
											{
												"type": "reference",
												"target": 864,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 867,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 864,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 868,
					"name": "restoreLineItemAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 869,
							"name": "restoreLineItemAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted line item adjustments by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.restoreLineItemAdjustments([\n  \"caliadj_123\",\n  \"caliadj_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 870,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 871,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line item adjustments."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 872,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the line item adjustments. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the line item adjustment's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1460,
										"typeArguments": [
											{
												"type": "reference",
												"target": 870,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 873,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 870,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 874,
					"name": "softDeleteShippingMethodAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 875,
							"name": "softDeleteShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes shipping method adjustments by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.softDeleteShippingMethodAdjustments([\n  \"casmadj_123\",\n  \"casmadj_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 876,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 877,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping method adjustments."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 878,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1457,
										"typeArguments": [
											{
												"type": "reference",
												"target": 876,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 879,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 876,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 880,
					"name": "restoreShippingMethodAdjustments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 881,
							"name": "restoreShippingMethodAdjustments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted shipping method adjustments by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.restoreShippingMethodAdjustments([\n  \"casmadj_123\",\n  \"casmadj_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 882,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 883,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping method adjustments."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 884,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the shipping method adjustment. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the shipping method adjustment's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1460,
										"typeArguments": [
											{
												"type": "reference",
												"target": 882,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 885,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 882,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 886,
					"name": "softDeleteLineItemTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 887,
							"name": "softDeleteLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes line item tax lines by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.softDeleteLineItemTaxLines([\n  \"calitxl_123\",\n  \"calitxl_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 888,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 889,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line item tax lines."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 890,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1457,
										"typeArguments": [
											{
												"type": "reference",
												"target": 888,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 891,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 888,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 892,
					"name": "restoreLineItemTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 893,
							"name": "restoreLineItemTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted line item tax lines by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.restoreLineItemTaxLines([\n  \"calitxl_123\",\n  \"calitxl_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 894,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 895,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the line item tax lines."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 896,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the line item tax lines. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the line item tax line's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1460,
										"typeArguments": [
											{
												"type": "reference",
												"target": 894,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 897,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 894,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 898,
					"name": "softDeleteShippingMethodTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 899,
							"name": "softDeleteShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes shipping method tax lines by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.softDeleteShippingMethodTaxLines([\n  \"casmtxl_123\",\n  \"casmtxl_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 900,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 901,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping method tax lines."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 902,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1457,
										"typeArguments": [
											{
												"type": "reference",
												"target": 900,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 903,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 900,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 904,
					"name": "restoreShippingMethodTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 905,
							"name": "restoreShippingMethodTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted shipping method tax lines by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait cartModuleService.restoreShippingMethodTaxLines([\n  \"casmtxl_123\",\n  \"casmtxl_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 906,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 907,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the shipping method tax lines."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 908,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the shipping method tax lines. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the shipping method tax line's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1460,
										"typeArguments": [
											{
												"type": "reference",
												"target": 906,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 909,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 906,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						587,
						592,
						597,
						602,
						609,
						620,
						627,
						632,
						639,
						646,
						653,
						658,
						663,
						672,
						683,
						688,
						697,
						702,
						710,
						715,
						720,
						729,
						734,
						739,
						748,
						753,
						758,
						767,
						772,
						779,
						786,
						793,
						800,
						807,
						814,
						820,
						826,
						832,
						838,
						844,
						850,
						856,
						862,
						868,
						874,
						880,
						886,
						892,
						898,
						904
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 923,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 937,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 938,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 949,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 939,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 940,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 941,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 942,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 943,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 944,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 945,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 946,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 947,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 948,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						938,
						939,
						940,
						941,
						942,
						946,
						947,
						948
					]
				}
			],
			"typeParameters": [
				{
					"id": 949,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1507,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 1508,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1510,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1510,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 1509,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 1507,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1510,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 1510,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1508,
						1509
					]
				}
			],
			"typeParameters": [
				{
					"id": 1510,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1020,
					"name": "FilterableCartProps"
				},
				{
					"type": "reference",
					"target": 1064,
					"name": "FilterableAddressProps"
				},
				{
					"type": "reference",
					"target": 1164,
					"name": "FilterableLineItemProps"
				},
				{
					"type": "reference",
					"target": 1254,
					"name": "FilterableShippingMethodProps"
				},
				{
					"type": "reference",
					"target": 1306,
					"name": "FilterableLineItemAdjustmentProps"
				},
				{
					"type": "reference",
					"target": 1342,
					"name": "FilterableShippingMethodAdjustmentProps"
				},
				{
					"type": "reference",
					"target": 1377,
					"name": "FilterableLineItemTaxLineProps"
				},
				{
					"type": "reference",
					"target": 1417,
					"name": "FilterableShippingMethodTaxLineProps"
				}
			]
		},
		{
			"id": 1457,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 1458,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1459,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1458
					]
				}
			],
			"typeParameters": [
				{
					"id": 1459,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1460,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 1461,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1462,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1461
					]
				}
			],
			"typeParameters": [
				{
					"id": 1462,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 1669,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1670,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 1670,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 1670,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 1691,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 1695,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1670,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 1701,
					"typeArguments": [
						{
							"type": "reference",
							"target": 1670,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 1671,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1672,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 1672,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 1672,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 1672,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 1691,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1692,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1693,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 1694,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										1693
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1719,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1720,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 1720,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 1720,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 1720,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 1709,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1718,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 1718,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 1710,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 1711,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									1711
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 1719,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 1718,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 1712,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1713,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1713
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 1719,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 1718,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 1714,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 1715,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											1715
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 1719,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 1718,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 1716,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1717,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1717
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 1719,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 1511,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1532,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1512,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1513,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1669,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1532,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1514,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1669,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1532,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1515,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1671,
										"typeArguments": [
											{
												"type": "reference",
												"target": 1532,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1671,
											"typeArguments": [
												{
													"type": "reference",
													"target": 1532,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 1516,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1671,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1532,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1517,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1671,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1532,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1518,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1671,
									"typeArguments": [
										{
											"type": "reference",
											"target": 1532,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 1519,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1669,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1532,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1520,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1671,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1532,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1521,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1671,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1532,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1522,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1671,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1532,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1523,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1671,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1532,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1524,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1525,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1526,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1527,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1528,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1529,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1530,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1531,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1513,
								1514,
								1515,
								1516,
								1517,
								1518,
								1519,
								1520,
								1521,
								1522,
								1523,
								1524,
								1525,
								1526,
								1527,
								1528,
								1529,
								1530,
								1531
							]
						}
					]
				}
			}
		},
		{
			"id": 1707,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1708,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1708,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 1671,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1708,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 1709,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1708,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 1701,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1702,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1511,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1707,
								"typeArguments": [
									{
										"type": "reference",
										"target": 1702,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 1707,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1702,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1707,
							"typeArguments": [
								{
									"type": "reference",
									"target": 1702,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 1706,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 1695,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1699,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1700,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 1700,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 1699,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 1699,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 1699,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 1511,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 1699,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 1699,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 1696,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignatures": [
											{
												"id": 1697,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 1698,
														"name": "x",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "V"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 1695,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 1700,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 1706,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 1703,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1704,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1705,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1705
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1685,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1690,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1686,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1687,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1688,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 1703,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 1689,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1690,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1687,
								1688,
								1689
							]
						}
					]
				}
			}
		},
		{
			"id": 1649,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1652,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 1685,
						"typeArguments": [
							{
								"type": "reference",
								"target": 1652,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1650,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1651,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1651
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1659,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 1668,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1660,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1661,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1662,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1668,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 1663,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1664,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1665,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1666,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1008,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 1667,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1661,
								1662,
								1663,
								1664,
								1665,
								1666,
								1667
							]
						}
					]
				}
			}
		},
		{
			"id": 1676,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1677,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1678,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1679,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1680,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1681,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1682,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1683,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1684,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1678,
								1679,
								1680,
								1681,
								1682,
								1683,
								1684
							]
						}
					]
				}
			}
		},
		{
			"id": 1673,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1674,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1675,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1674,
						1675
					]
				}
			]
		},
		{
			"id": 1618,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1619,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1620,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 1673,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1673,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 1621,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1622,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1623,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1624,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1623,
														1624
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1625,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1626,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1676,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 1627,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 1628,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 1629,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 1630,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 1676,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											1629,
											1630
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 1631,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1619,
						1620,
						1621,
						1625,
						1626,
						1627,
						1631
					]
				}
			]
		},
		{
			"id": 1635,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1636,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1637,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 1638,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1639,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1640,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1637,
										1638,
										1639,
										1640
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 1463,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1618,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1464,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1465,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1466,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1632,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 1467,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 1468,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1469,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 1470,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 1471,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 1472,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 1473,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 1474,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							1472,
																							1473,
																							1474
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 1475,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 1632,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1469,
															1470,
															1475
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 1476,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1477,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1478,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1479,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 1480,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1481,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1482,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1483,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1484,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1485,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1486,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1635,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1484,
														1485,
														1486
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1465,
										1466,
										1467,
										1476,
										1477,
										1478,
										1479,
										1480,
										1481,
										1482
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1632,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 1676,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1633,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1634,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1634
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 923,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 586,
					"name": "ICartModuleService"
				}
			]
		},
		{
			"id": 1653,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1654,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1655,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1656,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 1657,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 1658,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1654,
						1655
					]
				}
			]
		},
		{
			"id": 1493,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1494,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1495,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1496,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1649,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1649,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1497,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1498,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 1499,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 1653,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1649,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1500,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1501,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1502,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1503,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 1504,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1505,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1659,
												"typeArguments": [
													{
														"type": "reference",
														"target": 1504,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1659,
													"typeArguments": [
														{
															"type": "reference",
															"target": 1504,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 1506,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						1494,
						1497,
						1500,
						1502
					]
				}
			]
		},
		{
			"id": 1008,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 1009,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 1010,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1019,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 1011,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1019,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 1012,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1013,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1014,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1015,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1016,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 1493,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1017,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1018,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1009,
						1010,
						1011,
						1012,
						1013,
						1014,
						1015,
						1016,
						1017,
						1018
					]
				}
			],
			"typeParameters": [
				{
					"id": 1019,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 1641,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 1642,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1643,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 1644,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 1645,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1646,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1647,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 1648,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						1642,
						1643,
						1644
					]
				},
				{
					"title": "Methods",
					"children": [
						1645,
						1647
					]
				}
			]
		},
		{
			"id": 1488,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1489,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1490,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1490
							]
						}
					],
					"indexSignatures": [
						{
							"id": 1491,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 1492,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 1569,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1488,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 1641,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 1487,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 1641,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				1598,
				1350,
				1314,
				1609,
				1427,
				1387,
				1068,
				1261,
				1546,
				1111,
				950,
				1020,
				1064,
				1164,
				1306,
				1254,
				1342,
				1377,
				1417,
				1533,
				1097,
				1084,
				1029,
				1053,
				1041,
				1577,
				1591,
				1327,
				1334,
				1570,
				1583,
				1442,
				1449,
				1402,
				1409,
				1198,
				1172,
				1224,
				1227,
				1291,
				1299,
				1363,
				1370,
				586,
				937,
				1507,
				1457,
				1460,
				1673,
				1618,
				923,
				1653,
				1493,
				1008,
				1641
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				1669,
				1671,
				1691,
				1719,
				1709,
				1511,
				1707,
				1701,
				1706,
				1695,
				1703,
				1685,
				1649,
				1659,
				1676,
				1635,
				1463,
				1632,
				1488,
				1569,
				1487
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"585": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": ""
		},
		"586": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService"
		},
		"587": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.retrieveCart"
		},
		"588": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.retrieveCart"
		},
		"589": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"590": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"591": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"592": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listCarts"
		},
		"593": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listCarts"
		},
		"594": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"595": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"596": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"597": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listAndCountCarts"
		},
		"598": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listAndCountCarts"
		},
		"599": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"600": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"601": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"602": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createCarts"
		},
		"603": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createCarts"
		},
		"604": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"605": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"606": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createCarts"
		},
		"607": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"608": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"609": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateCarts"
		},
		"610": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateCarts"
		},
		"611": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"612": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateCarts"
		},
		"613": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"614": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"615": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"616": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateCarts"
		},
		"617": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "selector"
		},
		"618": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"619": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"620": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteCarts"
		},
		"621": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteCarts"
		},
		"622": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartIds"
		},
		"623": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"624": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteCarts"
		},
		"625": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"626": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"627": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listAddresses"
		},
		"628": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listAddresses"
		},
		"629": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"630": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"631": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"632": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createAddresses"
		},
		"633": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createAddresses"
		},
		"634": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"635": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"636": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.createAddresses"
		},
		"637": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"638": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"639": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateAddresses"
		},
		"640": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateAddresses"
		},
		"641": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"642": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"643": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateAddresses"
		},
		"644": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"645": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"646": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteAddresses"
		},
		"647": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteAddresses"
		},
		"648": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"649": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"650": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteAddresses"
		},
		"651": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"652": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"653": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.retrieveLineItem"
		},
		"654": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.retrieveLineItem"
		},
		"655": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "itemId"
		},
		"656": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"657": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"658": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItems"
		},
		"659": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItems"
		},
		"660": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"661": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"662": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"663": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItems"
		},
		"664": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItems"
		},
		"665": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"666": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItems"
		},
		"667": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"668": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItems"
		},
		"669": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"670": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "items"
		},
		"671": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"672": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateLineItems"
		},
		"673": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateLineItems"
		},
		"674": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"675": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateLineItems"
		},
		"676": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "selector"
		},
		"677": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"678": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"679": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.updateLineItems"
		},
		"680": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "lineId"
		},
		"681": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"682": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"683": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethods"
		},
		"684": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethods"
		},
		"685": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"686": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"687": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"688": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethods"
		},
		"689": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethods"
		},
		"690": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"691": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethods"
		},
		"692": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"693": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethods"
		},
		"694": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"695": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "methods"
		},
		"696": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"697": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItemAdjustments"
		},
		"698": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItemAdjustments"
		},
		"699": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"700": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"701": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"702": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemAdjustments"
		},
		"703": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemAdjustments"
		},
		"704": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"705": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemAdjustments"
		},
		"706": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"707": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemAdjustments"
		},
		"708": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"709": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"710": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setLineItemAdjustments"
		},
		"711": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setLineItemAdjustments"
		},
		"712": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"713": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"714": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"715": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethodAdjustments"
		},
		"716": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethodAdjustments"
		},
		"717": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"718": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"719": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"720": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodAdjustments"
		},
		"721": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodAdjustments"
		},
		"722": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"723": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodAdjustments"
		},
		"724": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"725": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodAdjustments"
		},
		"726": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"727": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"728": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"729": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setShippingMethodAdjustments"
		},
		"730": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setShippingMethodAdjustments"
		},
		"731": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"732": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "data"
		},
		"733": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"734": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItemTaxLines"
		},
		"735": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listLineItemTaxLines"
		},
		"736": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"737": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"738": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"739": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemTaxLines"
		},
		"740": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemTaxLines"
		},
		"741": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"742": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemTaxLines"
		},
		"743": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "taxLine"
		},
		"744": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addLineItemTaxLines"
		},
		"745": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"746": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"747": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"748": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setLineItemTaxLines"
		},
		"749": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setLineItemTaxLines"
		},
		"750": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"751": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"752": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"753": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethodTaxLines"
		},
		"754": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.listShippingMethodTaxLines"
		},
		"755": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "filters"
		},
		"756": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"757": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"758": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodTaxLines"
		},
		"759": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodTaxLines"
		},
		"760": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"761": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodTaxLines"
		},
		"762": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "taxLine"
		},
		"763": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.addShippingMethodTaxLines"
		},
		"764": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"765": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"766": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"767": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setShippingMethodTaxLines"
		},
		"768": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.setShippingMethodTaxLines"
		},
		"769": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "cartId"
		},
		"770": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "taxLines"
		},
		"771": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"772": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItems"
		},
		"773": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItems"
		},
		"774": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"775": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"776": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItems"
		},
		"777": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"778": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"779": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethods"
		},
		"780": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethods"
		},
		"781": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"782": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"783": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethods"
		},
		"784": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"785": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"786": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemAdjustments"
		},
		"787": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemAdjustments"
		},
		"788": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"789": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"790": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemAdjustments"
		},
		"791": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"792": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"793": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodAdjustments"
		},
		"794": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodAdjustments"
		},
		"795": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"796": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"797": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodAdjustments"
		},
		"798": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"799": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"800": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemTaxLines"
		},
		"801": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemTaxLines"
		},
		"802": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"803": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"804": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteLineItemTaxLines"
		},
		"805": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"806": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"807": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodTaxLines"
		},
		"808": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodTaxLines"
		},
		"809": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"810": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"811": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.deleteShippingMethodTaxLines"
		},
		"812": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "id"
		},
		"813": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"814": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteCarts"
		},
		"815": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteCarts"
		},
		"816": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"817": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"818": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"819": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"820": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreCarts"
		},
		"821": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreCarts"
		},
		"822": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"823": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"824": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"825": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"826": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteAddresses"
		},
		"827": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteAddresses"
		},
		"828": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"829": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"830": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"831": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"832": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreAddresses"
		},
		"833": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreAddresses"
		},
		"834": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"835": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"836": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"837": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"838": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItems"
		},
		"839": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItems"
		},
		"840": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"841": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"842": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"843": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"844": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItems"
		},
		"845": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItems"
		},
		"846": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"847": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"848": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"849": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"850": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethods"
		},
		"851": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethods"
		},
		"852": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"853": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"854": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"855": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"856": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethods"
		},
		"857": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethods"
		},
		"858": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"859": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"860": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"861": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"862": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItemAdjustments"
		},
		"863": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItemAdjustments"
		},
		"864": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"865": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"866": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"867": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"868": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItemAdjustments"
		},
		"869": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItemAdjustments"
		},
		"870": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"871": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"872": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"873": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"874": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethodAdjustments"
		},
		"875": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethodAdjustments"
		},
		"876": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"877": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"878": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"879": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"880": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethodAdjustments"
		},
		"881": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethodAdjustments"
		},
		"882": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"883": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"884": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"885": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"886": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItemTaxLines"
		},
		"887": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteLineItemTaxLines"
		},
		"888": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"889": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"890": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"891": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"892": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItemTaxLines"
		},
		"893": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreLineItemTaxLines"
		},
		"894": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"895": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"896": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"897": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"898": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethodTaxLines"
		},
		"899": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.softDeleteShippingMethodTaxLines"
		},
		"900": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"901": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"902": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"903": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"904": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethodTaxLines"
		},
		"905": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ICartModuleService.restoreShippingMethodTaxLines"
		},
		"906": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"907": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "ids"
		},
		"908": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "config"
		},
		"909": {
			"sourceFileName": "../../../../packages/core/types/src/cart/service.ts",
			"qualifiedName": "sharedContext"
		},
		"923": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"937": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"938": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"939": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"940": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"941": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"942": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"943": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"944": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"946": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"947": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"948": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"949": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"950": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO"
		},
		"951": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.id"
		},
		"952": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.region_id"
		},
		"953": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.customer_id"
		},
		"954": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.sales_channel_id"
		},
		"955": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.email"
		},
		"956": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.currency_code"
		},
		"957": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_address"
		},
		"958": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.billing_address"
		},
		"959": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.items"
		},
		"960": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_methods"
		},
		"961": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.metadata"
		},
		"962": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.created_at"
		},
		"963": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.updated_at"
		},
		"964": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_total"
		},
		"965": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_subtotal"
		},
		"966": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_item_tax_total"
		},
		"967": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_total"
		},
		"968": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_subtotal"
		},
		"969": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.item_tax_total"
		},
		"970": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_total"
		},
		"971": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_subtotal"
		},
		"972": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_tax_total"
		},
		"973": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.total"
		},
		"974": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.subtotal"
		},
		"975": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.tax_total"
		},
		"976": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.discount_total"
		},
		"977": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.discount_tax_total"
		},
		"978": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.gift_card_total"
		},
		"979": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.gift_card_tax_total"
		},
		"980": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_total"
		},
		"981": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_subtotal"
		},
		"982": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.shipping_tax_total"
		},
		"983": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_total"
		},
		"984": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_subtotal"
		},
		"985": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.original_shipping_tax_total"
		},
		"986": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_item_total"
		},
		"987": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_item_subtotal"
		},
		"988": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_item_tax_total"
		},
		"989": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_item_total"
		},
		"990": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_item_subtotal"
		},
		"991": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_item_tax_total"
		},
		"992": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_total"
		},
		"993": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_subtotal"
		},
		"994": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_tax_total"
		},
		"995": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_total"
		},
		"996": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_subtotal"
		},
		"997": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_tax_total"
		},
		"998": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_discount_total"
		},
		"999": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_discount_tax_total"
		},
		"1000": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_gift_card_total"
		},
		"1001": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_gift_card_tax_total"
		},
		"1002": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_shipping_total"
		},
		"1003": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_shipping_subtotal"
		},
		"1004": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_shipping_tax_total"
		},
		"1005": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_shipping_total"
		},
		"1006": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_shipping_subtotal"
		},
		"1007": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartDTO.raw_original_shipping_tax_total"
		},
		"1008": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"1009": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"1010": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"1011": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"1012": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"1013": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"1014": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"1015": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"1016": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"1017": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"1018": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"1019": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"1020": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps"
		},
		"1021": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.id"
		},
		"1022": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.sales_channel_id"
		},
		"1023": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.customer_id"
		},
		"1024": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.region_id"
		},
		"1025": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.created_at"
		},
		"1026": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableCartProps.updated_at"
		},
		"1027": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1028": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1029": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO"
		},
		"1030": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.region_id"
		},
		"1031": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.customer_id"
		},
		"1032": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.sales_channel_id"
		},
		"1033": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.email"
		},
		"1034": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.currency_code"
		},
		"1035": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.shipping_address_id"
		},
		"1036": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.billing_address_id"
		},
		"1037": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.shipping_address"
		},
		"1038": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.billing_address"
		},
		"1039": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.metadata"
		},
		"1040": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateCartDTO.items"
		},
		"1041": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDTO"
		},
		"1042": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDTO.id"
		},
		"1043": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.region_id"
		},
		"1044": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.customer_id"
		},
		"1045": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.sales_channel_id"
		},
		"1046": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.email"
		},
		"1047": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.currency_code"
		},
		"1048": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.shipping_address_id"
		},
		"1049": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.billing_address_id"
		},
		"1050": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.billing_address"
		},
		"1051": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.shipping_address"
		},
		"1052": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.metadata"
		},
		"1053": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO"
		},
		"1054": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.region_id"
		},
		"1055": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.customer_id"
		},
		"1056": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.sales_channel_id"
		},
		"1057": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.email"
		},
		"1058": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.currency_code"
		},
		"1059": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.shipping_address_id"
		},
		"1060": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.billing_address_id"
		},
		"1061": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.billing_address"
		},
		"1062": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.shipping_address"
		},
		"1063": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateCartDataDTO.metadata"
		},
		"1064": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableAddressProps"
		},
		"1065": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableAddressProps.id"
		},
		"1066": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1067": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1068": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO"
		},
		"1069": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.id"
		},
		"1070": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.customer_id"
		},
		"1071": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.first_name"
		},
		"1072": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.last_name"
		},
		"1073": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.phone"
		},
		"1074": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.company"
		},
		"1075": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.address_1"
		},
		"1076": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.address_2"
		},
		"1077": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.city"
		},
		"1078": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.country_code"
		},
		"1079": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.province"
		},
		"1080": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.postal_code"
		},
		"1081": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.metadata"
		},
		"1082": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.created_at"
		},
		"1083": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartAddressDTO.updated_at"
		},
		"1084": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAddressDTO"
		},
		"1085": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.customer_id"
		},
		"1086": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.company"
		},
		"1087": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.first_name"
		},
		"1088": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.last_name"
		},
		"1089": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_1"
		},
		"1090": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_2"
		},
		"1091": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.city"
		},
		"1092": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.country_code"
		},
		"1093": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.province"
		},
		"1094": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.postal_code"
		},
		"1095": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.phone"
		},
		"1096": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.metadata"
		},
		"1097": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAddressDTO"
		},
		"1098": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAddressDTO.id"
		},
		"1099": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.customer_id"
		},
		"1100": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.company"
		},
		"1101": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.first_name"
		},
		"1102": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.last_name"
		},
		"1103": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_1"
		},
		"1104": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_2"
		},
		"1105": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.city"
		},
		"1106": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.country_code"
		},
		"1107": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.province"
		},
		"1108": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.postal_code"
		},
		"1109": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.phone"
		},
		"1110": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.metadata"
		},
		"1111": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO"
		},
		"1112": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.id"
		},
		"1113": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.title"
		},
		"1114": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.subtitle"
		},
		"1115": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.thumbnail"
		},
		"1116": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.quantity"
		},
		"1117": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_id"
		},
		"1118": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_title"
		},
		"1119": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_description"
		},
		"1120": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_subtitle"
		},
		"1121": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_type"
		},
		"1122": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_collection"
		},
		"1123": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.product_handle"
		},
		"1124": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_id"
		},
		"1125": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_sku"
		},
		"1126": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_barcode"
		},
		"1127": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_title"
		},
		"1128": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.variant_option_values"
		},
		"1129": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.requires_shipping"
		},
		"1130": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.is_discountable"
		},
		"1131": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.is_tax_inclusive"
		},
		"1132": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.compare_at_unit_price"
		},
		"1133": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.unit_price"
		},
		"1134": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.tax_lines"
		},
		"1135": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.adjustments"
		},
		"1136": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.cart"
		},
		"1137": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.cart_id"
		},
		"1138": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.metadata"
		},
		"1139": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.created_at"
		},
		"1140": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.updated_at"
		},
		"1141": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemDTO.deleted_at"
		},
		"1142": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_total"
		},
		"1143": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_subtotal"
		},
		"1144": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_tax_total"
		},
		"1145": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_total"
		},
		"1146": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_subtotal"
		},
		"1147": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_tax_total"
		},
		"1148": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.total"
		},
		"1149": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.subtotal"
		},
		"1150": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.tax_total"
		},
		"1151": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.discount_total"
		},
		"1152": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.discount_tax_total"
		},
		"1153": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_original_total"
		},
		"1154": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_original_subtotal"
		},
		"1155": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_original_tax_total"
		},
		"1156": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_item_total"
		},
		"1157": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_item_subtotal"
		},
		"1158": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_item_tax_total"
		},
		"1159": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_total"
		},
		"1160": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_subtotal"
		},
		"1161": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_tax_total"
		},
		"1162": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_discount_total"
		},
		"1163": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_discount_tax_total"
		},
		"1164": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps"
		},
		"1165": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.id"
		},
		"1166": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.cart_id"
		},
		"1167": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.title"
		},
		"1168": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.variant_id"
		},
		"1169": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemProps.product_id"
		},
		"1170": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1171": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1172": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemForCartDTO"
		},
		"1173": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemForCartDTO.cart_id"
		},
		"1174": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.title"
		},
		"1175": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.subtitle"
		},
		"1176": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.thumbnail"
		},
		"1177": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.quantity"
		},
		"1178": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_id"
		},
		"1179": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_title"
		},
		"1180": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_description"
		},
		"1181": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_subtitle"
		},
		"1182": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_type"
		},
		"1183": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_collection"
		},
		"1184": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_handle"
		},
		"1185": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_id"
		},
		"1186": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_sku"
		},
		"1187": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_barcode"
		},
		"1188": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_title"
		},
		"1189": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_option_values"
		},
		"1190": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.requires_shipping"
		},
		"1191": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.is_discountable"
		},
		"1192": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.is_tax_inclusive"
		},
		"1193": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.compare_at_unit_price"
		},
		"1194": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.unit_price"
		},
		"1195": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.tax_lines"
		},
		"1196": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.adjustments"
		},
		"1197": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.metadata"
		},
		"1198": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO"
		},
		"1199": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.title"
		},
		"1200": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.subtitle"
		},
		"1201": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.thumbnail"
		},
		"1202": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.cart_id"
		},
		"1203": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.quantity"
		},
		"1204": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_id"
		},
		"1205": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_title"
		},
		"1206": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_description"
		},
		"1207": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_subtitle"
		},
		"1208": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_type"
		},
		"1209": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_collection"
		},
		"1210": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.product_handle"
		},
		"1211": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_id"
		},
		"1212": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_sku"
		},
		"1213": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_barcode"
		},
		"1214": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_title"
		},
		"1215": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.variant_option_values"
		},
		"1216": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.requires_shipping"
		},
		"1217": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.is_discountable"
		},
		"1218": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.is_tax_inclusive"
		},
		"1219": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.compare_at_unit_price"
		},
		"1220": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.unit_price"
		},
		"1221": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.tax_lines"
		},
		"1222": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.adjustments"
		},
		"1223": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemDTO.metadata"
		},
		"1224": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemWithSelectorDTO"
		},
		"1225": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemWithSelectorDTO.selector"
		},
		"1226": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemWithSelectorDTO.data"
		},
		"1227": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO"
		},
		"1228": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.id"
		},
		"1229": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.title"
		},
		"1230": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.quantity"
		},
		"1231": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.unit_price"
		},
		"1232": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.metadata"
		},
		"1233": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.tax_lines"
		},
		"1234": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemDTO.adjustments"
		},
		"1235": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "cart_id"
		},
		"1236": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "variant_id"
		},
		"1237": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "product_id"
		},
		"1238": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "subtitle"
		},
		"1239": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "thumbnail"
		},
		"1240": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "product_title"
		},
		"1241": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "product_description"
		},
		"1242": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "product_subtitle"
		},
		"1243": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "product_type"
		},
		"1244": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "product_collection"
		},
		"1245": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "product_handle"
		},
		"1246": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "variant_sku"
		},
		"1247": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "variant_barcode"
		},
		"1248": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "variant_title"
		},
		"1249": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "variant_option_values"
		},
		"1250": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "requires_shipping"
		},
		"1251": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "is_discountable"
		},
		"1252": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "is_tax_inclusive"
		},
		"1253": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "compare_at_unit_price"
		},
		"1254": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps"
		},
		"1255": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps.id"
		},
		"1256": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps.cart_id"
		},
		"1257": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps.name"
		},
		"1258": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodProps.shipping_option_id"
		},
		"1259": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1260": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1261": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO"
		},
		"1262": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.id"
		},
		"1263": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.cart_id"
		},
		"1264": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.name"
		},
		"1265": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.description"
		},
		"1266": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.amount"
		},
		"1267": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.is_tax_inclusive"
		},
		"1268": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.shipping_option_id"
		},
		"1269": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.data"
		},
		"1270": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.metadata"
		},
		"1271": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.tax_lines"
		},
		"1272": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.adjustments"
		},
		"1273": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.created_at"
		},
		"1274": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.updated_at"
		},
		"1275": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.original_total"
		},
		"1276": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.original_subtotal"
		},
		"1277": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.original_tax_total"
		},
		"1278": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.total"
		},
		"1279": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.subtotal"
		},
		"1280": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.tax_total"
		},
		"1281": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.discount_total"
		},
		"1282": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.discount_tax_total"
		},
		"1283": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.raw_original_total"
		},
		"1284": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.raw_original_subtotal"
		},
		"1285": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.raw_original_tax_total"
		},
		"1286": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.raw_total"
		},
		"1287": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.raw_subtotal"
		},
		"1288": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.raw_tax_total"
		},
		"1289": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.raw_discount_total"
		},
		"1290": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartShippingMethodDTO.raw_discount_tax_total"
		},
		"1291": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO"
		},
		"1292": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.name"
		},
		"1293": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.cart_id"
		},
		"1294": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.amount"
		},
		"1295": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.shipping_option_id"
		},
		"1296": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.data"
		},
		"1297": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.tax_lines"
		},
		"1298": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodDTO.adjustments"
		},
		"1299": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO"
		},
		"1300": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.name"
		},
		"1301": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.amount"
		},
		"1302": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.shipping_option_id"
		},
		"1303": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.data"
		},
		"1304": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.tax_lines"
		},
		"1305": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodForSingleCartDTO.adjustments"
		},
		"1306": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps"
		},
		"1307": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.id"
		},
		"1308": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.item_id"
		},
		"1309": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.promotion_id"
		},
		"1310": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.provider_id"
		},
		"1311": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemAdjustmentProps.item"
		},
		"1312": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1313": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1314": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemAdjustmentDTO"
		},
		"1315": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemAdjustmentDTO.item"
		},
		"1316": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemAdjustmentDTO.item_id"
		},
		"1317": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.id"
		},
		"1318": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.code"
		},
		"1319": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.amount"
		},
		"1320": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.raw_amount"
		},
		"1321": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.cart_id"
		},
		"1322": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.description"
		},
		"1323": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.promotion_id"
		},
		"1324": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.provider_id"
		},
		"1325": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.created_at"
		},
		"1326": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.updated_at"
		},
		"1327": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemAdjustmentDTO"
		},
		"1328": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemAdjustmentDTO.item_id"
		},
		"1329": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.code"
		},
		"1330": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.amount"
		},
		"1331": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.description"
		},
		"1332": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.promotion_id"
		},
		"1333": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.provider_id"
		},
		"1334": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO"
		},
		"1335": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.id"
		},
		"1336": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.item_id"
		},
		"1337": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.code"
		},
		"1338": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.amount"
		},
		"1339": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.description"
		},
		"1340": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.promotion_id"
		},
		"1341": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertLineItemAdjustmentDTO.provider_id"
		},
		"1342": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps"
		},
		"1343": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.id"
		},
		"1344": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.shipping_method_id"
		},
		"1345": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.promotion_id"
		},
		"1346": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.provider_id"
		},
		"1347": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodAdjustmentProps.shipping_method"
		},
		"1348": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1349": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1350": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodAdjustmentDTO"
		},
		"1351": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodAdjustmentDTO.shipping_method"
		},
		"1352": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodAdjustmentDTO.shipping_method_id"
		},
		"1353": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.id"
		},
		"1354": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.code"
		},
		"1355": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.amount"
		},
		"1356": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.raw_amount"
		},
		"1357": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.cart_id"
		},
		"1358": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.description"
		},
		"1359": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.promotion_id"
		},
		"1360": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.provider_id"
		},
		"1361": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.created_at"
		},
		"1362": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.updated_at"
		},
		"1363": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO"
		},
		"1364": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.shipping_method_id"
		},
		"1365": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.code"
		},
		"1366": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.amount"
		},
		"1367": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.description"
		},
		"1368": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.promotion_id"
		},
		"1369": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodAdjustmentDTO.provider_id"
		},
		"1370": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO"
		},
		"1371": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.id"
		},
		"1372": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.code"
		},
		"1373": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.amount"
		},
		"1374": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.description"
		},
		"1375": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.promotion_id"
		},
		"1376": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodAdjustmentDTO.provider_id"
		},
		"1377": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps"
		},
		"1378": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.id"
		},
		"1379": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.description"
		},
		"1380": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.code"
		},
		"1381": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.tax_rate_id"
		},
		"1382": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.provider_id"
		},
		"1383": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.item_id"
		},
		"1384": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableLineItemTaxLineProps.item"
		},
		"1385": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1386": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1387": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO"
		},
		"1388": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO.item"
		},
		"1389": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO.item_id"
		},
		"1390": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO.total"
		},
		"1391": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO.subtotal"
		},
		"1392": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO.raw_total"
		},
		"1393": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "LineItemTaxLineDTO.raw_subtotal"
		},
		"1394": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.id"
		},
		"1395": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.description"
		},
		"1396": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.tax_rate_id"
		},
		"1397": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"1398": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"1399": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"1400": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.created_at"
		},
		"1401": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.updated_at"
		},
		"1402": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateLineItemTaxLineDTO"
		},
		"1403": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.description"
		},
		"1404": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.tax_rate_id"
		},
		"1405": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.code"
		},
		"1406": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.rate"
		},
		"1407": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.provider_id"
		},
		"1408": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.item_id"
		},
		"1409": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateLineItemTaxLineDTO"
		},
		"1410": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.id"
		},
		"1411": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.description"
		},
		"1412": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.tax_rate_id"
		},
		"1413": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.code"
		},
		"1414": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.rate"
		},
		"1415": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.provider_id"
		},
		"1416": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.item_id"
		},
		"1417": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps"
		},
		"1418": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.id"
		},
		"1419": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.description"
		},
		"1420": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.code"
		},
		"1421": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.tax_rate_id"
		},
		"1422": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.provider_id"
		},
		"1423": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.shipping_method_id"
		},
		"1424": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "FilterableShippingMethodTaxLineProps.shipping_method"
		},
		"1425": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1426": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1427": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO"
		},
		"1428": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO.shipping_method"
		},
		"1429": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO.shipping_method_id"
		},
		"1430": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO.total"
		},
		"1431": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO.subtotal"
		},
		"1432": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO.raw_total"
		},
		"1433": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "ShippingMethodTaxLineDTO.raw_subtotal"
		},
		"1434": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.id"
		},
		"1435": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.description"
		},
		"1436": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.tax_rate_id"
		},
		"1437": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"1438": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"1439": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"1440": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.created_at"
		},
		"1441": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.updated_at"
		},
		"1442": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateShippingMethodTaxLineDTO"
		},
		"1443": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.description"
		},
		"1444": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.tax_rate_id"
		},
		"1445": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.code"
		},
		"1446": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.rate"
		},
		"1447": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.provider_id"
		},
		"1448": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.item_id"
		},
		"1449": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateShippingMethodTaxLineDTO"
		},
		"1450": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.id"
		},
		"1451": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.description"
		},
		"1452": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.tax_rate_id"
		},
		"1453": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.code"
		},
		"1454": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.rate"
		},
		"1455": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.provider_id"
		},
		"1456": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.item_id"
		},
		"1457": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"1458": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"1459": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1460": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"1461": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"1462": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"1463": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"1464": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1465": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"1466": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"1467": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"1468": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1469": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"1470": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"1471": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1472": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"1473": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"1474": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"1475": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"1476": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"1477": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"1478": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"1479": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"1480": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"1481": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"1482": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"1483": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1484": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"1485": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"1486": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"1487": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"1488": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"1489": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"1490": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"1491": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"1493": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"1494": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"1495": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"1496": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"1497": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"1498": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"1499": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"1500": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"1501": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"1502": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"1503": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"1504": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"1505": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"1506": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"1507": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"1508": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"1509": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"1510": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"1511": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"1512": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1513": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"1514": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"1515": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"1516": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"1517": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"1518": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"1519": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"1520": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"1521": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"1522": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"1523": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"1524": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"1525": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"1526": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"1527": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"1528": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"1529": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"1530": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"1531": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"1532": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1533": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO"
		},
		"1534": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.customer_id"
		},
		"1535": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.company"
		},
		"1536": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.first_name"
		},
		"1537": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.last_name"
		},
		"1538": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_1"
		},
		"1539": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.address_2"
		},
		"1540": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.city"
		},
		"1541": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.country_code"
		},
		"1542": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.province"
		},
		"1543": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.postal_code"
		},
		"1544": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.phone"
		},
		"1545": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpsertAddressDTO.metadata"
		},
		"1546": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO"
		},
		"1547": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_total"
		},
		"1548": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_subtotal"
		},
		"1549": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.original_tax_total"
		},
		"1550": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_total"
		},
		"1551": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_subtotal"
		},
		"1552": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.item_tax_total"
		},
		"1553": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.total"
		},
		"1554": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.subtotal"
		},
		"1555": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.tax_total"
		},
		"1556": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.discount_total"
		},
		"1557": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.discount_tax_total"
		},
		"1558": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_original_total"
		},
		"1559": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_original_subtotal"
		},
		"1560": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_original_tax_total"
		},
		"1561": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_item_total"
		},
		"1562": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_item_subtotal"
		},
		"1563": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_item_tax_total"
		},
		"1564": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_total"
		},
		"1565": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_subtotal"
		},
		"1566": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_tax_total"
		},
		"1567": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_discount_total"
		},
		"1568": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "CartLineItemTotalsDTO.raw_discount_tax_total"
		},
		"1569": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"1570": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO"
		},
		"1571": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.description"
		},
		"1572": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.tax_rate_id"
		},
		"1573": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.code"
		},
		"1574": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.rate"
		},
		"1575": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.provider_id"
		},
		"1576": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateTaxLineDTO.item_id"
		},
		"1577": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO"
		},
		"1578": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.code"
		},
		"1579": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.amount"
		},
		"1580": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.description"
		},
		"1581": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.promotion_id"
		},
		"1582": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "CreateAdjustmentDTO.provider_id"
		},
		"1583": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO"
		},
		"1584": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.id"
		},
		"1585": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.description"
		},
		"1586": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.tax_rate_id"
		},
		"1587": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.code"
		},
		"1588": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.rate"
		},
		"1589": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.provider_id"
		},
		"1590": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateTaxLineDTO.item_id"
		},
		"1591": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO"
		},
		"1592": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.id"
		},
		"1593": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.code"
		},
		"1594": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.amount"
		},
		"1595": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.description"
		},
		"1596": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.promotion_id"
		},
		"1597": {
			"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
			"qualifiedName": "UpdateAdjustmentDTO.provider_id"
		},
		"1598": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO"
		},
		"1599": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.id"
		},
		"1600": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.code"
		},
		"1601": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.amount"
		},
		"1602": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.raw_amount"
		},
		"1603": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.cart_id"
		},
		"1604": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.description"
		},
		"1605": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.promotion_id"
		},
		"1606": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.provider_id"
		},
		"1607": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.created_at"
		},
		"1608": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "AdjustmentLineDTO.updated_at"
		},
		"1609": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO"
		},
		"1610": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.id"
		},
		"1611": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.description"
		},
		"1612": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.tax_rate_id"
		},
		"1613": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.code"
		},
		"1614": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.rate"
		},
		"1615": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.provider_id"
		},
		"1616": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.created_at"
		},
		"1617": {
			"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
			"qualifiedName": "TaxLineDTO.updated_at"
		},
		"1618": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"1619": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"1620": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"1621": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"1622": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"1623": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"1624": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"1625": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"1626": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"1627": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"1628": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"1629": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"1630": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"1631": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"1632": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"1633": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1634": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"1635": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"1636": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"1637": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"1638": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"1639": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"1640": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"1641": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"1642": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"1643": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"1644": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"1645": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"1646": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"1647": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"1648": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"1649": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"1650": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"1651": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"1652": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"1653": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"1654": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"1655": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"1656": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"1657": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"1659": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"1660": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"1661": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"1662": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"1663": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"1664": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"1665": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"1666": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"1667": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"1668": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"1669": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"1670": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1671": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"1672": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1673": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"1674": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"1675": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"1676": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"1677": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"1678": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"1679": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"1680": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"1681": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"1682": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"1683": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"1684": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"1685": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"1686": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"1687": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"1688": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"1689": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"1690": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"1691": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"1692": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1693": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"1694": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"1695": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"1696": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1697": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"1699": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1700": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"1701": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"1702": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1703": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"1704": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"1705": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"1706": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"1707": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"1708": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1709": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"1710": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1711": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"1712": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1713": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"1714": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1715": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"1716": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"1717": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"1718": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"1719": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"1720": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/cart/service.ts"
		},
		"reflections": {
			"1": 585
		}
	}
}